'strict mode'

import vx_core from "../../../vx/core.js"
import nx_tactics_base from "../../../nx/tactics/base.js"


export default class nx_tactics_decks_ability {

  /**
   * @function abilitymap_tactics
   * Returns the base abilitymap
   * @param  {tactics} tactics
   * @return {abilitymap}
   */
  static t_abilitymap_tactics = {
    vx_type: vx_core.t_type
  }
  static e_abilitymap_tactics = {
    vx_type: nx_tactics_decks_ability.t_abilitymap_tactics
  }

  // (func abilitymap-tactics)
  static f_abilitymap_tactics(tactics) {
    let output = nx_tactics_base.e_abilitymap
    output = nx_tactics_base.f_abilitymap_from_abilitylist(
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "2-Legged"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "3 Point Turn", ":summary", "* [Skill]: [Driving]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "3-Legged"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "4-Legged"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "6-Legged"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "8-Legged"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Abdomen Timing of Two", ":reference", "Refers to feinting an attack, then striking an enemy as they are retracting from an attack, hitting them in the abdomen with the correct timing of either two moves or two seconds. Although the technique seems relatively simple, Musashi lists this as one of the hardest techniques to time correctly."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Ablative Armor", ":summary", "* Armor that vaporizes when hit decreasing damage but also damaging the armor.\n* Ignore the first point of [Damage] and reduce [Armor] (on that facing) instead."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Absorb Electricity"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Administration", ":titles", "Administrator, Secretary"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Agriculture", ":summary", "* Grow Crop", ":titles", "Farmer, Gardener"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Air Bubble", ":summary", "* [Power]: [Aeromancy], [Air]\n* [Action]: Create an area of breathable air in a radius of 1m/[Level]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Air Burst"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Ambush", ":summary", "* [Action]: Anyone who is within 10m, tests [Investigation] vs. [Stealth] with [Advantage] to detect them.\n* [Downtime]: Carefully choose an ambush spot and conceal multiple units. They remain concealed as long as they do not move or speak."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Analyze Weakness"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Anvil Strike", ":summary", "* [+1 Damage] when target is adjacent to solid terrain."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Arc Lightning", ":summary", "* Lightning leaps from the target to others in range."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Architecture", ":summary", "* [Downtime]: Design a structure. The size and quality of the structure are limited by level.\n* [Skill]: [Tradeskill]\n* [Action]: Determine weaknesses of a structure.", ":titles", "Architect"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Arcing Fire", ":summary", "* May fire over other units that block Line of Sight.\n* [Skill]: [Ranged]\n* [Requires]: Bow or Javelin"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Armed Robbery", ":summary", "* [Skill]: [Crime]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Art Imitates Life", ":reference", "Dorian Gray", ":summary", "* [Power]: [Papercraft]\n* Artwork become real"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Artificial Gills", ":summary", "* Can breathe underwater for 15min/lvl.\n* [Power]: [Artificial: Implants]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "As if in a Dream", ":summary", "* Confuse a target's senses to perceive a single thing incorrectly."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Authority", ":summary", "* [Skill]: [Law]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Auto Med System", ":summary", "* Detects severe damage to the wearer and automatically takes action to reduce shock and maintain suit integrity (sealing leaks or amputating if necessary)."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Autotomy", ":titles", "Self-amputation", ":reference", "* Uh, I hope I didn't need that - Lounging Lizard, Runeterra", ":summary", "* Self-amputation is the behaviour whereby a creature sheds or discards an appendage, usually as a self-defense mechanism to elude a predator's grasp.\n* It is often paired with Regeneration."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Back Fist", ":titles", "Backhand, Bitch Slap", ":summary", "* Strike with the back of the fist or open hand.\n* [Skill]: [Close Combat]\n* [Arc]: Arc:Left or Arc:Right"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Backflip Kick", ":titles", "Flash Kick", ":summary", "* [Skill]: [Close Combat]+1\n* [High Attack]\n* [Limited] by [Acrobatics].\n1 Move (directly backwards)\n+1 Damage"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Backlash"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Backstab", ":summary", "* [Passive]:\n** IF [Flanking] THEN [Skill]:+1\n** IF [Blindspot] THEN [Skill]:+[Skill]", ":titles", "Back Biter, Back Stabber, Opportunist, Traitor"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Balanced for Throwing"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Balefire", ":titles", "Hellfire, Witchfire", ":summary", "* Balefire is a magical, corrupting fire that appears as a sickly pale, greenish flame that flows like a liquid. It burns like napalm and is not extinquished by water. Prolonged exposure produces damage like [Radiation].\n* [Power]: [Corruption]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Ball Lightning"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Barbed Javelin", ":summary", "* [Requires]: Javelin\n* Criticals vs Large units are [Rage] Tokens."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Bargain", ":titles", "Haggler, Merchant", ":summary", "* [Skill]: [Business]\n* Ability that Limits any attempt to buy or sell goods at their actual worth."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Barrage", ":summary", "* A barrage is a line or barrier of exploding shells from a large number of guns firing continuously. Its purpose is to deny or hamper enemy passage. It contrasts with a concentration, in which all the guns aim at the same small area.\n\n* The barrage was developed in World War I, with the infantry following the advancing barrage. Its employment in this way recognised the importance of artillery fire in neutralising, rather than destroying, the enemy. A creeping barrage immediately followed by an infantry assault could be far more effective than weeks of preliminary bombardment."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Barren Loins", ":summary", "* [Power]: [Enchantment]\n* Target cannot conceive a child while under this curse."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Beatdown", ":summary", "* [Skill]: [Close Combat]\n* IF your [Rival] is [Prone] THEN [Damage]:+1"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Bite", ":summary", "* [Skill]: [Close Combat]\n* IF you have a [Hold] on a target THEN [Damage]: [Body] [Pierce] [Slash] [Hack]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Blacksmithing", ":titles", "Blacksmith", ":summary", "* [Skill]: [Tradeskill]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Blade Barrier", ":titles", "Wall of Swords", ":summary", "* Creates a 3 space wide [Wall] directly in front of the unit by rapidly swinging the blade in a flashy display. Anything crossing this wall is subject to an [Opportunity Attack]."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Blade Locking", ":summary", "* [Skill]: [Melee]\n* [Requires]: [Parry], May only be used against swords, knives or polearms.\n* [Reaction]: -2\n* [Success]: Opponent gains a [Broken Defense Token] for each [Hit]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Blend into the Crowd", ":summary", "* Attitude, Mannerism, and Appearance can often allow a stranger to go unnoticed in a crowd.\n* [Continuous]: While active, unit is hidden as long as at least 10 other units are within skill spaces."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Bless Object", ":summary", "* Apply a different blessing to object. That object can hold the blessing until triggered.\n* Duration: Level hours\n* Only level objects may be blessed at one time. If exceeded the earliest one is erased."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Blessing against Cold", ":summary", "* [Focus]: +1 [Defense] and +1 [Armor] vs. Cold"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Blessing against Electricity", ":summary", "* [Focus]: +1 [Defense] and +1 [Armor] vs. Electricity"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Blessing against Fire", ":summary", "* [Focus]: +1 [Defense] and +1 [Armor] vs. Fire"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Blessing against Projectiles", ":summary", "* [Focus]: +1 [Defense] and +1 [Armor] vs. projectilees."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Blessing against Melee", ":summary", "* [Focus]: +1 [Defense] and +1 [Armor] vs. melee weapons. Unarmed combat is unaffected."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Blind Fighting"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Blind Justice", ":summary", "* [Skill]: [Law]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Blinding"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Blinding Spit"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Blinding Toxin"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Body Climb", ":summary", "* [Requires]: [Melee] or [Close Combat] vs an enemy of larger scale.\n* [Damage]: If the hit location is [Q], [K], or [A], Climb the target's body and do +1 Damage."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Body Electric", ":titles", "Electricity Form", ":summary", "* Change into pure electricity."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Body Flares", ":summary", "* Detects and distracts heat seaking missiles,\n* [Passive] - +1 Defense vs. Heat-Seaking Missiles (3 uses)"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Body Morph"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Bomb Disposal", ":reference", "* I'll tell you a dirty little secret. When you're in the middle of an explosion, it's the ultimate rush. - Haggerty, Obliterated\n* Who has one thumb and just saved Las Vegas? This guy! - Hagerty, Obliterated"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Bootlegger Reverse", ":summary", "* [Skill]: [Driving]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Bowel Raker", ":summary", "* +1 [Bleeding]\n* -1 [Piercing]", ":titles", "Serrated Arrow"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Brain Drain"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Brain Freeze"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Brain Storm"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Brainwashing", ":summary", "* [Power]: [Domination] vs. [Will]\n* [Effect]: At Will:0 the [Rival] obeys all commands and becomes [Brainwashed]."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Brewing", ":summary", "* Brew Beer\n* Brew Hard Liquor\n* Brew Mead\n* Brew Wine", ":titles", "Brewer, Vintner"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Bug Hunt", ":reference", "* H:Is this going to be a stand-up fight, sir? Is it going to be another bug hunt? G:A Xenomorph may be involved... H:It's a bug hunt. - Hudson and Gorman, Aliens"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Bull Rush", ":titles", "Charge"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Burrowing"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Calculator Mind"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Calligraphy", ":summary", "* [Skill]: [Art]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Call of the Hunt"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Call for Backup", ":reference", "Bring me everyone.  What do you mean 'everyone'?  EVERY-ONE! - Stansfield and Benny - Leon the Professional", ":summary", "* [Skill]: [Law]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Call to Arms", ":reference", "Unite. Take up arms.\nStand shoulder to shoulder with your brothers and sisters.\nAnd break free from the cold shackles of oppression.\n\nLiberty for all is more noble than the preservation of one's soul.\nDestiny and valor will meet at the end of the sword.\nAnd the tales of heroic sacrifice will be the legend of a new age.\n\nThere will be no respite.\nThere will be no surrender.\nOnly glory and honor.\nThe price will be high for the greatest prize of all.\nStand and be counted among those that dared.\nThose who dared to fight for their freedom. - Glass Fleet", ":summary", "Gather a war party from the populace"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Call Lightning", ":summary", "* Calls a lightning strike from an existing storm cloud."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Call Spirits", ":summary", "* [Power]: [Shamanism]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Camouflage", ":summary", "* [Skill]: [Hunting] or [Stealth]\n* [Continuous]: While active, unit is hidden.\n* [Defense]: +1 Defense in [Terrain].\n* [Roll]: Skill - Move this turn.\n* [Versus]: and others must roll Spirit - Terrain penalty vs to detect."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Cannibal", ":summary", "* [Power]: [Special Ability]\n* [Requires]: Close Combat\n* [Attack]: Each [Critical Hit] may remove a [Damage Token] from this unit."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Carpentry", ":titles", "Carpenter", ":summary", "* [Skill]: [Tradeskill]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Catapult Launcher", ":summary", "* Launching vehicle may begin move at up to full speed without using fuel.\n* [Power]: [Hanger]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Catapult Hook Capture", ":summary", "* Vehicles may land without perfectly matching the movement of the mothership.\n* [Power]: [Hanger]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Centrifuge Chamber", ":summary", "* Simulates gravity.\n* [Power]: [Cabin]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Chain of Command", ":summary", "* [Action]: [Activate] up to [Command] units directly or indirectly adjacent to this unit. These units (including this one) may spend [Speed] or [Actions] in any order this [Turn].\n* [Interrupt]: May not be used as an Interrupt."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Chaotic", ":summary", "* [Power]: [Special Ability]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Charge", ":reference", "* We'll use the old ways...speed of horse! - Arthur, Excalibur", ":summary", "* [Skill]: [Riding]\n* [Requires]: Unit must have moved at least 4 spaces in a straight line.\n* [Action]: Melee Attack costs no [Speed].\n* [Attack], [Damage]: Any [Critical Hits] may be [Morale Tokens]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Charm", ":titles", "Warding Sign", ":summary", "* [Power]: [Enchantment]\n* The opposite of [Malediction]. Charm reduces the severity of negative effects.\n* [Requires]: Target cannot have any [Charm] Tokens.\n* [Action]: Roll vs. Spirit and add a Black [Charm] Token for each [Hit]."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Charm of Virgo", ":summary", "* [Power]: [Astrology] [Presence]\n* [Action]: Gain [Synergy] on unit's next communication skill. Duration 1 turn."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Circular Logic", ":reference", "* If such actions were not illegal, then they would not be prohibited by the law.", ":summary", "* A seemingly reasonable argument that is in fact based upon dependent information.\n* Such arguments are logically valid. That is, the conclusion does in fact follow from the premise, since it is already contained in the premise. They do not, however, aid in the proof of the statement or the premise.\n* [Skill]: [Brilliance]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Claw", ":summary", "* The fighter attacks with both claws.\n* Criticals - [Bleeding]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Claw Rake", ":summary", "* A quick raking claw attack with one set of claws.\n* [Power]: [Natural Weaponry]\n* [Skill]:+2\n* [Move]:+1\n* [Crits] - [Bleeding]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Cleaning", ":titles", "Maid"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Cloak and Dagger", ":summary", "* [Action]: Gains short term Stealth, move up to 2 spaces ignoring attacks of opportunity and attack with a [Knife] by [Surprise]."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Clothesline", ":summary", "* [Skill]: [Close Combat]\n* [Requires]: Must have Moved this Round. [Hit Location]=Head or Shoulders\n* [Arc]: Arc:Left or Arc:Right\n* [Effect]: IF [Hit Location] is Head or Shoulders THEN Knockdown:+1"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Cobbling", ":summary", "* Make Shoes", ":titles", "Cobbler"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Coercion", ":reference", "* The boat will be ready for you on Friday. If I see you or any of your friends before then, Miss. Finneran will find herself the victim of a most gruesome violation before she dies. As will your father, Mr. Hockney, and your Uncle Randall in Arizona, Mr. Kint. I might only castrate Mr. McManus's nephew, David. Do I make myself clear? - Kobayashi, Usual Suspects", ":summary", "* [Skill]: [Intimidation] vs [Will]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Combat Sense"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Commanding Presense"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Compartmentalize", ":summary", "* Separate a hidden thought process away from the normal mind.\n* [Skill]: [Brilliance]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Concoct Dream Essence", ":summary", "* Dreams caught with [Dreamcatching] can be contained in a bottle called [Dream Essence]. Opening the bottle releases the experience of the dream to all surrounding it."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Condemn", ":summary", "* [Skill]: [Law]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Confiscate", ":summary", "* [Skill]: [Law]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Confidence Game", ":titles", "Con Artist, Swindler", ":summary", "* [Skill]: [Deception]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Constrict", ":titles", "Bear Hug"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Continuous Cut", ":reference", "The Flowing Water Cut is used when you are struggling blade to blade with the enemy. When he breaks and quickly withdraws trying to spring with his sword, expand your body and spirit and cut him as slowly as possible with your long sword, following your body like stagnant water. - Miyamoto Mushashi, The Book of Five Rings", ":summary", "* [Reaction]: [+1 Defense].  If you are not hit, you may immediately attack as a free action at [-1 Attack].", ":titles", "Flowing Water Cut"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Control Lightning", ":summary", "* [Reaction]: Redirect a lightning effect to another target."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Control Spirit", ":summary", "* [Power]: [Shamanism]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Cooking", ":titles", "Chef, Cook", ":summary", "* Prepare a meal based on a known Recipe\n* [Skill]: [Tradeskill]\n* 30 Minutes: Convert foodstuffs into a meal for [Level] people."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Cooping", ":summary", "* Make Sealable Barrel", ":titles", "Cooper"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Corrupted", ":summary", "* [Power]: [Special Ability]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Cover your Tracks", ":summary", "* Hide your tracks to make it difficult to track you.\n* [Skill]: [Hunting]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Crafts", ":summary", "* [Skill]: [Art]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Create Chimera", ":summary", "A Chimera is an imaginary creation. It exists only to the user, though those with magical abilities, young children and the mentally impaired may see them. They only can affect those who can see them."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Crime and Punishment", ":summary", "* [Skill]: [Law]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Crouching Strike", ":titles", "Ducking Punch", ":summary", "* Crouch low and deliver a powerful blow to the mid-section or below the belt.\n* [Skill]: [Close Combat]\n* [Attack] [5]: Effect:+1"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Crowd Control", ":summary", "* [Skill]: [Law]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Cryo Sleep System", ":summary", "* Can freeze the wearer into cryo-sleep and armor runs on minimal power to preserve the wearer from hostile environments or critical wounds for up to a month before power gives out."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Cryogenic Chamber", ":summary", "* Able to carry passengers in cryonic suspension.\n* [Power]: [Cabin]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Cryptography", ":summary", "* [Skill]: [Brilliance]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Cull the Herd"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Daedalus Gateway", ":summary", "* A subtle gate that moves a person to a different Realm without them realizing. Both locations must be nearly identical."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Dash Attack", ":summary", "* [Skill]: [Melee]-1\n* [Requires]: May only move in a straight line this turn.\n* [Effect]: May attack any number of adjacent opponents along path each at a cumulative [Melee]:-1."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Dazing Blow", ":summary", "-2 Damage\nDamage - [Stun]\nCriticals - [Stun]", ":titles", "Pommel Strike"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Dead Drop", ":summary", "* Leave goods to be picked up later. If successful they will not be touched."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Deadfall"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Deadly Shot", ":summary", "* [Requires]: Bow or Crossbow\n* Increase weapon range by 50% and choose [Hit Location]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Deafening"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Death March", ":summary", "* Increase movement of allies within level spaces. Sustained use of this ability runs the risk of injuring or killing some allies.\n* [Skill]: [Intimidation] vs [Will]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Death Roll"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Death's Door", ":summary", "* [Power]: [Necromancy]\n* [Action]: Project your spirit into the [Underworld] while the body lies in a coma.\n* [Death]: Enter the Underworld"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Decoy", ":summary", "* [Skill]: [Deception]\n* Create a decoy to mislead.\n* [Move]: Remove this unit from play and place 1 Decoy Token and 1 Decoy Unit Token on this unit's space. Both decoys may act normally during the Action phase, but any action but movement will dispel the decoys.  Both decoys defend as the original unit. If either unit is Hit, both decoys are dispelled. The decoys last until the next turn or until dispelled."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Deflect", ":summary", "* Deflect, catch, or even return projectiles hurled at the fighter.\n* This ability provides a second Defense roll against a projectile attack before the regular Defense roll.\n* [Reaction]\n+2 Initiative\n+1 Accuracy\n0 Damage - Any successes become -Damage to the projectile. If the projectile has 0 Damage remaining, it is caught.\nCriticals - Any Criticals become -2 Damage to the proejctile. If the projectile has 0 Damage remaining and there are still Criticals, the projectile may be immediately thrown at +[Criticals] Accuracy."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Deflecting Punch", ":summary", "* The fighter deflects a punch at him and immediately counters with a punch of his own.\n* [Skill]: [Close Combat]\n* [Counter] [6]: [Effect]:+1"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Demoralize", ":summary", "* [Power]: [Empathy]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Desire", ":summary", "* [Power]: [Presence]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Destruction", ":summary", "* Effects only unliving objects\n* A target that takes Destruction Tokens equal to Body are completely destroyed."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Detail Oriented", ":summary", "* [Skill]: [Investigation]\n* ONCE IF you found and item during a [Search] AND one or more [Crit]s THEN you may resuffle that item into the [Search Deck] and draw again taking the new result insteaad."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Detect Trap", ":summary", "* [Skill]: [Deception]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Detective Work", ":reference", "* To a cop the explanation is never that complicated. It's always simple. There's no mystery to the street, no arch criminal behind it all. If you got a dead body and you think his brother did it, you're gonna find out you're right. - Verbal, Usual Suspects", ":summary", "* [Skill]: [Investigation]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Dialect-Enlisted", ":summary", "Dialect of enlisted soldiers"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Dialect-Laborer", ":summary", "Dialect of laborer"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Dialect-Officer", ":summary", "Dialect of officer soldiers"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Dialect-Sailor", ":summary", "Dialect of sailors"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Dialect-Servant", ":summary", "Dialect of servants"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Dialect-Slave", ":summary", "Dialect of slaves"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Dimension Door", ":summary", "* Cross through a doorway or arch of some sort and appear through another similar arch some distance away."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Dimensional Gateway", ":summary", "* Open a portal to another dimension."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Direct Neural Link", ":reference", "* Do you think that's air your breathing? - Morpheus, The Matrix", ":summary", "* A plug installed into the brain to directly connect to computer systems. Highly dangerous, but effective.\n* [Power]: [Artificial: Interface]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Dirty Fighting", ":titles", "Bite, Eye Gouge, Ear Pop, Hair Pulling, Low Blow"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Disarm", ":reference", "The Red Leaves Cut means knocking down the enemy's long sword. The spirit should be getting control of his sword. When the enemy is in a long sword attitude in front of you and intent on cutting, hitting and parrying, you strongly hit the enemy's sword with the Fire and Stones Cut... If you then beat down the point of his sword with a sticky feeling, he will necessarily drop the sword. If you practise this cut it becomes easy to make the enemy drop his sword. - Miyamoto Mushashi, The Book of Five Rings", ":summary", "* Strike to knock a weapon or item from opponent's grasp.\n* This special ability does no damage but allows the user to force a target to drop an item (usually a weapon).\n* [Skill]: [Close Combat] or [Melee]\n-1 Initiative\n-1 Accuracy\n0 Damage. Opponent drops the chosen item. Each critical moves the item 1 space away (your choice).", ":titles", "Red Leaves Cut"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Disengage", ":summary", "* The fighter removes a [Hold] token.\n* [Reaction]\n+1 Initiative\n0 Damage\n-1 Move"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Disguise", ":reference", "* I am everyWHERE! I am everyONE! - Leblanc, Runeterra", ":summary", "* [Skill]: [Performance]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Disintegrate", ":summary", "* Causes wounds that are difficult to heal\n* A victim that takes Disintegrate Tokens equal to Body are completely destroyed."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Distraction", ":titles", "Throw Dirt", ":summary", "* [Skill]: [Deception]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Dive for Cover"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Dodge", ":summary", "* [Skill]: [Evasion]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Dodge Roll", ":summary", "* [Skill]: [Evasion]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Double Shot", ":summary", "* May attack two targets in same [Arc].\n* [Skill]: [Firearms]-2\n* [Piercing]:-1", ":titles", "Double Throw"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Doublethink", ":reference", "* To tell deliberate lies while genuinely believing in them, to forget any fact that has become inconvenient, and then, when it becomes necessary again, to draw it back from oblivion for just so long as it is needed. - 1984 George Orwell", ":summary", "* Doublethink is the act of simultaneously holding two mutually contradictory beliefs while fervently fooling oneself into believing both.\n* [Skill]: [Brilliance]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Down the Rabbit Hole", ":summary", "* [Skill]: [Dreaming]\n* [Requires]: A hole that leads somewhere unknown.\n* [Action]: By entering a hole, the Dreamer may travel to the [Spirit Realm]. If the Dreamer is a native of the [Spirit Realm], he may stay as long as he wants. If not, he will return to the real world after [Skill] hours as if waking from a dream."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Drag", ":summary", "* [Skill]: [Close Combat]\n* [Requires]: You must have a [Hold] on the target.\n* [Action]: You may at an additional Move:-1/space while dragging the target behind you."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Dragnet", ":reference", "* Our fugitive has been on the run for ninety minutes. Average foot speed over uneven ground barring injuries is 4 miles-per-hour. That gives us a radius of six miles. What I want from each and every one of you is a hard-target search of every gas station, residence, warehouse, farmhouse, henhouse, outhouse and doghouse in that area. - The Fugitive", ":summary", "* [Skill]: [Law]\n* Search a large area for a fugitive."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Drawing", ":summary", "* [Skill]: [Art]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Dream Effectively", ":reference", "* I was just thinking. Wouldn't it be funny if I wasn't the only one who could dream effectively? What if everybody could do it? And reality was being pulled out from under us all the time - and we didn't even know it? - George Orr, The Lathe of Heaven\n* Oh, my God... I just killed six billion people... - George Orr, The Lathe of Heaven", ":summary", "* [Skill]: [Dreaming]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Dream Riding", ":summary", "* Ability to enter another person's dream.\n* [Skill]: [Dreaming]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Dream Sight", ":summary", "* See dreams, dreamers, Fae, and dream powers for what they are.\n* [Skill]: [Dreaming]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Dream Speak", ":summary", "* Grants the ability to converse with things that cannot normally speak including plants, animals, and inanimate objects. Such beings have knowledge and personalities limited by their natures.\n* [Skill]: [Dreaming]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Dream Therapy", ":summary", "* Heal Trauma by exploring the Dream World.\n* [Skill]: [Dreaming]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Dream Weaving", ":reference", "* She was shaping a world. She could envision the world, feel the spring of the earth beneath her bare feet, the warmth of the sun, the vibrant green of the grass, the hazy blue of distant mountains. 'Do you feel it?' 'Yes.' 'Then make it real.' She brought all of her will to paint all the details of the dream onto a new reality. She opened her eyes and gazed out upon the land she had already seen in her mind. It was so beautiful it took her breath away ... and failed to return it. She gasped as her lungs emptied and her vision faded to black ... A useful lesson. You forgot to breathe in the scents of your world that would indicate air. Remember even the smallest detail is crucial. - Tales of Magick", ":summary", "* [Skill]: [Dreaming]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Dreamcatching", ":summary", "* [Skill]: [Dreaming]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Dreamreading", ":summary", "* [Hour]: By sleeping next to a dreamer, you may witness their dreams and interpret them. You may also return to previous dreams.\n* [Skill]: [Dreaming]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Dreamriding", ":summary", "* [Hour]: By sleeping next to a dreamer, you may participate in their dreams.\n* [Skill]: [Dreaming]\n* [Requires]: [Dreamreading]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Dreamquest", ":summary", "* Explore the [Dream Realm]\n* [Action]: While asleep, Spirit enters the [Dream Realm]. The Spirit may travel as long as it wants, but whenever the Body awakens, the Spirit immediately returns.\n* [Death]: Spirit may permanently enter the [Spirit Realm]."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Drilling", ":summary", "* [Power]: [Digging]\n* Create a hole"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Drunken Monkey Roll", ":summary", "* [Crouching]\n-1 Action\n+2 Initiative\n+2 Move\n+1 Defense"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Dual Wield", ":reference", "* Not used on the battlefield where a shield would be more practical.\n* Used primarily for parrying during one on one duels.\n* Two longsword duelling was done by very skilled fighters in Italian duelling.\n* Dual katana Japanese styles also exist.", ":summary", "* Using a second weapon in the off hand.\n* [Skill]: [Close Combat] or [Melee]\n* [Counter]: [Damage]:+1"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Duress", ":summary", "* [Skill]: [Intimidation] vs [Will]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Ego Whip", ":summary", "* [Skill]: [Mental Combat] vs. [Spirit].", ":titles", "Mind Whip"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Ejection System", ":summary", "* Ability to eject quickly when in danger. Works well with [Escape Pod].\n* [Power]: [Cabin]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Elder Tongue", ":summary", "[Skill]: [Communications]\nPrefixes\n* Alf - Elf\n* Dverg - Dwarf\n* Hel - Dead\n* Jotun - Giant\n* Man - Human\n* Muspel - Fire\n* Nifl - Mist\n* Svart - Dark\n* Yo - Demonic\nSuffixes\n* Ar - Race\n* Heim - Home\n* Ki - Soul\n* Ma - Creature\n* Traum - Dream\nWords\n* Alfar - Elvish Race\n* Albtraum - Elf Dream (Nightmare)\n* Alfheim - Land of Elves\n* Dvergar - Dwarven Race\n* Helar - Restless Dead\n* Helheim - Land of the dead\n* Manar - Human Race\n* Manheim - Land of Men\n* Muspelheim - Land of Fire\n* Niflheim - Land of Ice\n* Svartalfheim - Land of Dark Elves\n* Yoki - Demon Soul\n* Yoma - Demon"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Electromagnetic Pulse"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Elvish", ":summary", "Fluent in the Elvish/Alfar language"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Engineering Genius"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "English", ":summary", "Fluent in the English language"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Enslave", ":reference", "Did you know that pain causes the formation of the strongest chemical bonds in the mammalian brain? Whip a dog, and it keeps coming back... At first it will hope that you'll stop, but after a while, it won't even know the difference. But you already know all about that don't you?... Time melted away into the pain... Finally something clicked over in his head and reality rushed back in around him, clearer and sharper than ever before... Staring he made out faces... Faces distended in howling agony... eyes welling with tears of blood, eyes that all turned toward Her, crying in admiration. - Mage: The Book of Madness", ":summary", "* [Skill]: [Intimidation] vs [Will]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Entanglement", ":summary", "Reduces Movement", ":titles", "Tanglers"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Environmental Containment", ":summary", "* Suit is sealed against chemical and biological weapons except corrosive ones. It is also water-proof."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Environmental Independence", ":summary", "* Suit is sealed against most hostile environments including space. Does not include corrosive environments.\n* Requires - [Enviromental Containment]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Epiphany", ":summary", "* A moment of ecstasy, delight, and intense revelation. During epiphanies, disparate things suddenly synchronize and make sense. Ephipanies often trigger major changes in personality or goals."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Escape", ":reference", "* The chain in those handcuffs is high-tensile steel. It'd take you ten minutes to hack through it with this. Now, if you're lucky, you could hack through your ankle in five minutes. Go.", ":summary", "* [Skill]: [Deception]\n* The ability comes from extensive practice escaping from various bonds and confinements. At higher abilities, the user can dislocate joints to slither out of bonds.", ":titles", "Escape Artist"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Escape Pod", ":titles", "Lifeboat", ":summary", "* Ability to escape in a sort of lifeboat when in danger. Works well with [Ejection System].\n* [Power]: [Hanger]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Eternal Youth", ":titles", "Ageless", ":summary", "* [Power]: [Longevity]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Ethereal", ":summary", "* [Power]: [Special Ability]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Evade Pursuit", ":summary", "* [Skill]: [Deception]\n* Ability to correctly evaluate the opponent's pursuit style and outwit the pursuer."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Excavating", ":summary", "* [Power]: [Digging]\n* Expose a large buried area."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Exile", ":summary", "* [Skill]: [Law]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Existential Riddle", ":summary", "Demoralize unwitting rivals by questioning their purpose in life."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Exonerate", ":summary", "* [Skill]: [Law]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Explosive Shot", ":summary", "* [Requires]: Bow or Crossbow"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Explosives", ":summary", "* Experienced using various small explosives in combat.\n* [Skill]: [Demolitions]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Eyes of a Child", ":summary", "* All Chimera become visible to those you chose."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Face Molding", ":summary", "[Downtime]: Soften a face and mold it like clay. Scuplting skill determines effectiveness."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Face Off", ":summary", "[Downtime]: Surgically swap appearances with another unit."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Factory: Manufacturing", ":summary", "* Can produce manufactured goods. Must be modified for each type of good.\n* [Power]: [Factory]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Factory: Military", ":summary", "* Can produce military vehicles. Must be modified for each type of vehicles.\n* [Power]: [Factory]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Factory: Pharmaceutical", ":summary", "* Can produce drugs. Must be modified for each type of drug.\n* [Power]: [Factory]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Factory: Vehicle", ":summary", "* Can produce vehicles. Must be modified for each type of vehicles.\n* [Power]: [Factory]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Falconry", ":summary", "* [Skill]: [Animal Handling]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Feather Blades", ":summary", "* Feathers become as hard as steel and may be used as swords."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Feather Knives", ":summary", "* Feathers become as hard as steel and may be thrown like knives."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Feeblemind"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Feedback Loop"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Feint", ":summary", "* Feints are maneuvers designed to distract or mislead, done by giving the impression that a certain maneuver will take place, while in fact another, or even none, will.", ":titles", "Kizeme"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Feeding Frenzy", ":summary", "* [Power]: [Special Ability]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Fend Off", ":summary", "* [Requires]: Weapon with [Reach]\n* [Reaction]: If you hit with [Fend Off], the opponent may not move any closer to you this turn."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Fester", ":summary", "* Increase the [Effect] of an existing [Disease].\n* [Power]: [Corruption]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Field Dressing"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Financial Genius"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Fire and Stones Cut", ":reference", "The Fires and Stones Cut means that when the enemy's sword and your sword clash together you cut as strongly as possible without raising the sword even a little. This means cutting quickly with the hands, body and legs - all three cutting strongly. If you train well enough you will be able to strike strongly. - Miyamoto Mushashi, The Book of Five Rings", ":summary", "* [Reaction]: [+1 Defense]\n* [Action]: [+1 Attack], if you used this ability to [React] last turn."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Fishing", ":titles", "Fisherman", ":summary", "* Catch enough fish to eat. Similar to Foraging.\n* [Skill]: [Hunting]\n   :summary\n* 6 Hours: IF practical THEN catch 1kg of game/Level"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Flaming Shot", ":summary", "* [Requires]: Bow or Crossbow"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Fleche", ":summary", "* A [Lunge] forward where the attacker continues to move forward past the defender to avoid a [Riposte] or Counter Attack.\n-1 Initiative\n+1 Move - May only move straight forward.\n+1 Damage"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Fletching", ":summary", "* The art of making arrows. High quality or specialized arrows are quickly used up and often impractical to buy. Creating your own is often a very practical solution.", ":titles", "Bowyer"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Floation Device", ":summary", "* An emergency floatation device."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Follow Through", ":summary", "* [Action]: If you hit with this ability, you may immediately turn to the left or right and attack a target in the next adjacent space. This may be repeated any number of times at [-1 Attack] per target after the first though each additional target must be in the same direction."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Fond Memories", ":reference", "Eternal Sunshine of the Spotless Mind", ":summary", "* This ability makes every childhood dream and ambition real again. Every imaginary friend is remembered clearly and the happiest moments from youth return with the intensity of a first kiss and the excitement of Christmas. Then, suddenly, its over. In their absence, depression can crash down.  Truly fallen beings can become suicidal. The remembrance can be uplifting in the end, allowing one to relive the best moments of life."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Foot Stomp", ":reference", "* The toe crusher. That went out of style when I left kindergarten. - Kung Fu Hustle", ":summary", "* Stomp on opponent's foot to slow their movement.\n* [Skill]: [Close Combat]\n* [Damage]: IF a Foot Bash THEN Damage:+1"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Foraging", ":summary", "* [Skill]: [Survival]\n* [Action]: This ability can be used to forage for 1 man day of food and water for each [Effect]. Such food will typically be disgusting to those unaccustomed to the local cuisine, but it will sustain. Excess food only lasts for 1 additional day before going bad. Excess water can be transfered to containers if any, otherwise it cannot be carried. [Crit]s provide a particularly tasty, convenient, or useful source of nutrition (e.g. water in bamboo that can be carried, food that will last another day or more)."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Forgery", ":summary", "* [Skill]: [Deception]\n* The ability to forge money or documents. This ability is also used while creating money to prevent forgery.\n* [Extended Action]: Roll vs. object quality or anti-forgery level. Any [Hits] allow a forgery that can pass at a distance. The more [Hits] and [Criticals] rolled, the more indistinquishable from the original. High level forgeries are works of art unto themselves."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Forward Observer", ":summary", "* [Action]: When unit has [Line of Sight] on a opponent, any number of units with [Indirect Fire] may attack that unit even if they do not have [Line of Sight]."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Fuel Scoop", ":summary", "* Can scoop fuel directly into [Tanker Hold].\n* [Power]: [Cargo]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Fungal Growth", ":summary", "* [Power]: [Diseases]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Gambling", ":titles", "Gambler, High Roller", ":summary", "* [Skill]: [Deception]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Gateway", ":summary", "* Open a portal to another location."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Giant", ":summary", "* [Power]: [Special Ability]\n* [Body]:+0x2"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Handstand Kick", ":summary", "* The fighter bends over, places his hands on the ground, and then presses his legs up into a handstand. The legs snap up with tremendous kicking force. Can be used while [Prone]\n* [Skill]: [Close Combat]\n* Initiative:-1\n* Move:-1\n* Damage:+1"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Huge", ":summary", "* [Power]: [Special Ability]\n* [Body]:+0x1"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Glassblowing", ":summary", "* Blow Bottle\n* Blow Glass Decoration"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Grab", ":summary", "* [Skill]: [Close Combat]\n* [Damage]: [Body] [Hold] [Lock]\n* Attempt to grab a unit."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Grappling Hoist", ":summary", "* A grappling dart that is fired into stone or hooked onto any uneven surface. The attached winch can then pull the wearer to the target or vis versa depending on relative weight. This can be used for climbing or towing. The darts can be recovered and reused, but they are often not recoverable. 2 replacement darts are included."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Great Reveal", ":reference", "Ta-Da!", ":summary", "* [Skill]: [Deception]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Grip of Fear", ":reference", "* It was Keyser Soze, Agent Kujan. I mean the Devil himself. How do you shoot the devil in the back? What if you miss? - Verbal, Usual Suspects", ":summary", "* [Skill]: [Intimidation] vs [Will]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Guard Training", ":summary", "* [Skill]: [Animal Handling]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Hamstring", ":summary", "* Attack the legs to slow the opponent.\n* [Action]\n-1 Accuracy\nCriticals - [Cripple]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Harvest Poison", ":summary", "* [Skill]: [Animal Handling]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Herding", ":titles", "Cowboy, Pig Farmer, Rancher, Shepherd", ":summary", "* [Skill]: [Animal Handling]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Hide", ":summary", "* Find a hiding place in an area where you will not normally be detected.\n* IF You have [Full Cover] AND you don't move AND your opponents are at least your [Body] spaces away.\n* THEN [Action] [Continuous]: You are hidden from view AND Opponents must succeed at [Investigate]/[Seek] to detect you."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Hip Shoot", ":summary", "* [Skill]: [Firearms]\n* Can shoot at Initiative:-1 without disadvantage from the Hip."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Honor Among Thieves", ":reference", "* Honor is the rust on a dull blade. Sivir, Runeterra", ":summary", "* [Skill]: [Deception]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Horns", ":summary", "* Usually they are worn as antlers, but may sprout form anywhere on the body."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "House Painting"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Hover", ":summary", "* Hovering allows full movement speed over any flat terrain without actually touching the surface. Ground, Water, Sand, Ice, generally cause no penalty, but turning is difficult and imprecise especially at high speeds.\n* Hovering units may [Move] backwards.\n* Hovering units may use [Vector Movement] rule."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Hunter's Mark", ":summary", "* [Continuous]: Place a mark on target. Initiative:+1 vs. marked target."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Hurricane Kick", ":image", "MartialArts/HurricaneKick.jpg", ":reference", "* Ryu, Ken, Akuma, Street Fighter", ":summary", "* May attack up to 2 units in any surrounding spaces.\n* [Skill]: [Close Combat]\n-1 Speed\n-2 Attack", ":titles", "Butterfly Kick, Whirlwind Kick"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Husbandry", ":summary", "* The ability to raise and breed animals to emphasize certain traits.\n* [Skill]: [Animal Handling]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Hyperdrive", ":image", "Units/SpaceAndTime/Hyperspace.jpg", ":titles", "FTL Drive, Gravity Drive, Gravity Lens, Subspace Drive, T-Drive, Tachyon Drive, Warp Drive", ":summary", "* Faster than light travel can be accomplished by warping space into a Wormhole/Black hole, dropping out of normal space and travelling through the parallel universe called Hyperspace/Tachyon Space where physical laws are not bound by the relationship between mass and the speed of light, and finally returning to normal space by creating another space warp.\n* Hyperspace/Tachyon Space - Tachyon Space, like other dimensions is at right angles to our existing 3 dimension. In Hyperspace, time and distance have different meanings, all particles are tachyons, and the speed of light is an absolute minimum speed instead of a maximum. Travelling through Hyperspace is exceptionally hazardous. In fact, any deviation from the calculated route cause the corridor to collapse leaving one stranded in Hyperpace forever with no way to calculate a return.\n* Calculating a Route - Once a destination is chosen, complex calculations must be performed to calculate a direct route from the current location to the destination through the shifting reality of Hyperspace. A successful route will be a 'straight' line through Hyperspace. Proximity to a gravity well makes these calculations next to impossible. Typically, all ship computer resources are required for this calculation and the larger the ship fewer the available routes and therefore the greater the complexity. Ships may only enter and exit hyperspace at the edge of a solar system and must use conventional sub light drives within the system. A day or more at sub-light speed is therefore required to reach or leave a planet in an inner solar system. Route calculation time is roughly light years x tons / 10secs e.g. 4 light years x 100 tons / 10 = 40sec.\n* Hyperspace Corridor - Once calculated, the ship must meet the speed defined by the calculation while modulating the Hyperdrive energy signature to match the bridge to Hyperspace. If all goes well, the vast energies in Tachyon Space will form a corridor directly to the destination. Errors in any of the steps usually involve intense gravitional shearing forces that will at best cause damage to the Hyperdrive and leave the traveller stranded in deep space, or worse, Hyperspace.\n* Travel in Hyperspace - Hyperspace travel is typically a boring affair. The Hyperspace corridor carries the ship to its destination, so no manuevering is needed. The time spent in Hyperspace varies, but is usually proportional to the distance. Transit time is roughly 2 hours per light year travelled (e.g. 4 light years x 2 = 8hours)\n* Tachyon Doppler Effect - When the Hyperspace Corridor is created, both ends of the corridor will start leaking Tachyons which can be detected by sensitive instruments. The amount of Tachyons increases with the size of the ship, the distance travelled and the closer the time of arrival.\n* Tachyon Relay Network - Satellites at the edge of stellar systems use Hyperspace Corridors to beam tranmissions through Hyperspace to their opposites in other systesm. Since these communications have negligible mass, the calculations are nearly instantaneous though the same transit times apply.\n* History - Imaginary Space, I-Space - While studying fusion plant efficiency using various algorithms, a surprising discovery was made: very rarely and seemingly at random, the plant would produce a tiny tachyon burst. After decades of study, a pattern began to emerge along with a shocking discovery: only algorithms using imaginary numbers could trigger a burst and a small amount of particles were actually disappearing during the event. Where the particles were going became the primary focus of astrophysics from then on. Eventually a hypothesis gathered momentum. The particles were leaving real space and traveling along trajectories plotted through so called imaginary space. This implied that the destination of the particles could be predicted. After much trial and error another breakthrough: a second tachyon burst moments after the first and many kilometers away. The particles had returned. Faster than light travel was possible. The implications for communications were immediately obvious, but could something larger make the trip? Research was slow because increased mass meant increased complexity. The power and computational needs were high but not unachievable. Only a decade later the first successful test craft made the trip. A decade later commercial hyperdrives became available. A decade later they were affordable on even modest starships."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Ice Castle", ":reference", "* The cold never bothered me anyway. - Elsa, Frozen", ":titles", "Snow Fort", ":summary", "* [Power]: [Cold]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Ice Flow", ":summary", "* A floating block of ice suitable for a raft rises to the water's surface.\n* [Skill]: [Cold]\n* [Requires]: May only be cast near water."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Imaginary Friend", ":reference", "* As I was walking up the stair, I met a man who wasn't there. He wasn't there again today. If only he would go away. - Children's Nursery Rhyme\n* Mother, do you remember when I was little, I had a friend, he was make-believe? No. Don't you remember? Only I could see him? No, I don't remember Drop Dead Fred at all. - Drop Dead Fred\n* Let's write something on the carpet... I know how about 'Mother SUCKS'. - Drop Dead Fred", ":summary", "Create a character with a distinct personality of your choice that only the target can see."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Impact Absorption", ":summary", "* [Power]: [Inertia]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Impale", ":summary", "* [Requires]: Spear\n* [Action]\n-1 Accuracy\nCriticals - [Piercing]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Indirect Fire", ":summary", "-2 Attack\n-2 Damage\n* Other units do not block [Line of Sight].\n* See: [Forward Observer]\n* See: [HE - High Explosives]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Inertial Dampening", ":summary", "* [Power]: [Inertia]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Infrared Dampener", ":summary", "* By activating this system, the armor reduces all heat signatures. Use of any system (even passive ones) will negate the stealth.\n* [Continuous Action] - Stealth vs. Infrared Sensors"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Inspiration", ":summary", "* Allies in Radius are Continuously inspired to greater feats by this ability.\n* [Skill]: [Performance]\n* [Passive]\n* [Continuous]: [Retreats] are reduced by 1 for all allies within the radius."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Interrogate", ":reference", "* I'm gonna ask you one more goddamn time, and if you still 'respectfully refuse,' I'm callin' the Bear Jew over here, and he's gonna take that big-ole bat of his, and he's gonna beat you to death with it. Now take your wiener schnitzel lickin' finger and point out on this map what I want to know...We got a German here who wants to die for his country! Oblige him! - Lt. Aldo Raine, Inglourious Basterds\n* You don't need that. I'll tell you everything. Yes...I know you will. - Raiders of the Lost Ark", ":summary", "* [Skill]: [Intimidation] vs [Will]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Intestinal Parasite", ":summary", "* [Power]: [Diseases]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Intimidate", ":reference", "* Your timing is impeccable. Pity you were all they sent... The Fatui would do well to update their intelligence concerning me. Ah, but of course, that would require one of you to return in one piece. - Ayato, Genshin Impact\n* ...to the death. No. To the pain. I don't think I'm quite familiar with that phrase. ... To the pain means the first thing you will lose will be your feet below the ankles. Then your hands at the wrists. Next your nose. ...And then my ears, I understand let's get on with it. WRONG. Your ears you keep and I'll tell you why. So that every shriek of every child at seeing your hideousness will be yours to cherish. Every babe that weeps at your approach, every woman who cries out, 'Dear God! What is that THING?,' will echo in your perfect ears. That is what to the pain means. It means I leave you in anguish, wallowing in freakish misery ... forever. ...I think you're bluffing. It's possible, Pig, I might be bluffing. It's conceivable, you miserable, vomitous mass, that I'm only lying here because I lack the strength to stand. But, then again... perhaps I have the strength after all. - Princess Bride", ":summary", "* A form of bluffing\n* [Skill]: [Intimidation] vs [Will]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Investigative Genius"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Invisible", ":summary", "* [Power]: [Invisibility]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Iron Horse", ":titles", "San He", ":reference", "The Blob, X-men", ":summary", "* The ability to prevent being moved.\n* [Skill]:+1\n* [Passive]\n* Defense - When rolling Defense, [Hits] or [Crits] can be exchanged for [Knockback] or [Knockdown] resistance.\n0 Move"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Iron Skin", ":summary", "* Hardening of the skin to prevent cuts and punctures.", ":titles", "Maka Wara, Stone Skin"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Irritating Toxin"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Jaw Lock", ":summary", "* The fighter locks his powerful jaws onto the opponent to immobilize.\n* Damage - [Slow]\n* Criticals - [Piercing]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Jaws of Death", ":summary", "* Fericiously attack with huge bites."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Jewelsmithing", ":summary", "* Gemcutting\n* Fashion Jewelry", ":titles", "Gemcutter, Jeweler"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Judgment", ":reference", "* I am the law! - Judge Dredd", ":summary", "* [Skill]: [Law]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Jump Jets"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Kick", ":summary", "* [Low Attack]\n* [Skill]: [Close Combat]-1\n* [Damage]: [Body]+1 [Bash]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Kiss of Death"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Knife Throwing"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Laboring", ":titles", "Laborer, Worker"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Landscaping", ":summary", "* Grow Bonsai\n* Grow Flowers\n* Grow Hedges\n* Grow Hedge Maze\n* Grow Trees", ":titles", "Groundskeeper, Landscaper, Lawnboy"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Leatherworking", ":summary", "* Fashion Leather Goods\n* Flay Skins", ":titles", "Tanner"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Lernaean Poison", ":summary", "* [Power]: [Special Ability]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Lernaean Regeneration", ":summary", "* [Power]: [Healing]\n* [Activate]: If unit is Damaged, Remove a Damage Token and add a White Close Combat Token."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Lightning Charge", ":summary", "* Imbue an item with electric charge that is discharged on contact."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Lightning Lash", ":titles", "Arc Lash, Lightning Whip", ":summary", "* [Power]: [Electricity] or [Electromancy]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Lightning Leg", ":image", "MartialArts/LightningLeg.jpg", ":reference", "* Chun-Li, Street Fighter", ":summary", "* [Skill]: [Close Combat]\n* [Finishing Move]\n* [Attack]: [Auto]\n LIGHTNING LEG			-- 2		+  1(x3)	None		as 100handslap	(1 W)		K3, Double Hit Kick\n*  Knockback; When this maneuver is chosen the fighter determines which of the three attacks strike high, and which strike low (2 high, 1 low; or 1 high, 2 low), this affects blocking accordingly."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Lightning Pillar", ":summary", "* [Power]: [Electricity] or [Electromancy]\n* [Action]: Summon a pillar of Electricity within Range. (Removing any others)\n* [Reaction]: IF anything touches the pillar THEN you may make a basic Electricity [Attack].\n* [Reaction]: IF you use an Electricity ability THEN you may arc it to strike from the pillar instead."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Lightning Warp", ":summary", "* [Power]: [Electricity] or [Electromancy]\n* Near instantaneous travel in a flash of lightning.\n* Level determines distance travelled."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Line Swinging", ":titles", "Web Swinging"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Linguistic Genius"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Livestock", ":summary", "* The ability to grow livestock.\n* [Skill]: [Animal Handling]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Living Nightmare", ":summary", "* A chimerical monster formed from nightmares or madness.", ":titles", "Waking Nightmare"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Living Quarters", ":summary", "* Long range and luxury vessels offer more than the minimum crew quarters. This includes private rooms, mess, recreation areas, etc.\n* The larger the living space, the higher quality clientele may be brought aboard and the longer the ships range before shore leave is needed.\n* Includes Mess and Lounges\n* [Power]: [Cabin]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Lobotomize", ":reference", "You'll even have fantasies about alien civilizations, as you requested, but in the end, back on earth you'll be lobotomized! - Dr. Edgemar, Total Recall"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Logging"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Long Life", ":summary", "* Extremely long-lived\n* [Power]: [Longevity]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Lunge"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Lure", ":reference", "Everquest Pulling"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Luxury Facilities", ":summary", "* [Power]: [Cabin]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Malleate", ":reference", "* My, who happened to you? - Evelynn, Runeterra", ":summary", "* Make target soft and malleable like clay."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Marine Drop Pod", ":summary", "* Ability to send Marines in custom drop pods.\n* [Power]: [Hanger]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Marine Ready Room", ":summary", "* [Power]: [Cabin]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Master Plan", ":summary", "* [Skill]: [Brilliance]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Masterpiece", ":summary", "* [Skill]: [Art]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Mathematical Genius"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Maze Mastery", ":summary", "* The user knows thousands of mazes and can choose an optimal course through any maze with minimal trial and error.\n* [Skill]: [Brilliance]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Mental Blast", ":summary", "Attacks Mind.  All tokens are stun."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Mental Gymnastics"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Mental Prison", ":summary", "* Trap a person's personality in a prison within their own mind.", ":titles", "Mind Prison, Prison of the Mind"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Metalworking", ":titles", "Coppersmith, Goldsmith, Machinist, Pewtersmith, Silversmith"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Mind Blank", ":summary", "* Hide ones true thoughts.\n* Makes an excellent poker face.\n* [Skill]: [Brilliance]\n* Full defense against any attempt to detect the unit's mind.\n* Full defense against any attempt to detect lies."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Mindless", ":summary", "* [Power]: [Special Ability]\n* 0 [Mind]\n* Does not avoid [Hazard]\n* Cannot use any Mind Abilities\n* Immune to Abilities that target [Mind]."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Mining Rig", ":summary", "* Can mine for ore. Must be modified for each type of ore.\n* [Power]: [Factory]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Misdirection", ":summary", "* [Skill]: [Deception]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Misinformation", ":reference", "* Spock: Logic is a little tweeting bird chirping in a meadow. Logic is a wreath of pretty flowers which smell BAD. Are you sure your circuits are functioning correctly? Your ears are green. - I, Mudd, Star Trek", ":summary", "* [Skill]: [Brilliance]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Missile Mount", ":summary", "* A special mount to add a missile pack on the back of the armor."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Molecular Alteration"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Monstrous", ":summary", "* [Power]: [Special Ability]\n* [Body]:+0x3"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Multitasking"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Nemean Invulnerability", ":summary", "* [Power]: [Special Ability]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Neck Bite", ":summary", "* After grabbing an opponent, the fighter bites the neck/shoulders of the opponents doing damage each turn.\n* Requires: [Hold], [Continuous Hold]\n* +1 Initiative\n* +1 Accuracy\n* Critcals - [Bleeding]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Nightmare Essence", ":summary", "* Nightmares caught with [Dreamcatching] can be contained in a bottle. Opening the bottle releases the experience of the dream to all surrounding it. These can be used as grenades."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Off Roading"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Offhanded Fighting", ":summary", "* [Action]: Common Attacks take a -2 penalty if performed with the non primary hand. This ability negates that penalty when using this skill in the off hand.", ":reference", "I: I admit it. You are better than I am.\nM: Then why are you smiling?\nI: Because I know something you don't know.\nM: And what is that?\nI: I am not left-handed!\n...\nM: You're amazing!\nI: I ought to be, after twenty years.\nM: There's something I ought to tell you.\nI: Tell me.\nM: I'm not left-handed either. - Inigo Montoya abd /Man in Black, Princess Bride"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Oil Rig", ":summary", "* Can mine for oil. Must be modified for each type of oil.\n* [Power]: [Factory]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Overwhelm"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Painting", ":summary", "* [Skill]: [Art]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Parallel Parking", ":summary", "* [Skill]: [Driving]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Paralyzing Bite"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Paralyzing Spit"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Paralyzing Spray"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Paralyzing Sting"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Parry", ":summary", "* The fighter uses his weapon to block an opponent's attack.\n* [Reaction]\n+1 Initiative\n+2 Defense"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Passenger Seating", ":summary", "* [Power]: [Cabin]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Pep Talk", ":reference", "* A small victory is still a victory. Good work. - Kai'sa, Runeterra"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Petrification", ":summary", "* [Skill]: [Transformation] vs. [Spirit] and place [Petrification] counters on the target body location.\n* Any body location with a [Petrification] is encased in stone. It requires an [Action] to remove a [Petrification]. Any area that suffers 3 [Petrification] turns completely to stone. If any other area is so petrified, then complete petrification immediately spreads across the entire body and then the body and all its gear immediately converts to a stone statue.\n* Additional Effects: A petrified arm cannot move. A petrified leg reduces Move by half. A petrified head is unable to see or hear. Other petrifed areas have no additional effect. Petrified Arms or legs can break off like a clean amputation without blood loss.\n* This ability can also be used to restore a petrified target back to its original form if the skill is at least equal to the original. Lost limbs may also be restored by reattaching the limb before restoration.\n* This ability can also be used on any sort of earth to harden the earth to equivalent stone."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Philosophy", ":reference", "* I went to see the doctor of Philosophy, with a poster of Rasputin and a beard down to his knees. He never did marry or see a B-grade movie. He graded my performance. He said he could see through me. I spent 4 years prostrate to the higher mind, got my paper and I was free. - Indigo Girls, Closer I Am To Fine", ":summary", "* [Skill]: [Science: Social]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Photographic Memory"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Photoshopping", ":summary", "* [Skill]: [Art]\n* Modify an image to improve or mislead."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Pick Pocket", ":summary", "* [Skill]: [Deception]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Piercing Shot", ":summary", "* [Skill]: [Ranged]\n* [Requires]: Bow or Crossbow\n* [Armor Piercing]:1"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Piercing Strike", ":summary", "* [Action]: Trades damage to increase armor penetration."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Pillow Fort", ":summary", "* By exercising one's imagination, a soft barrier can provide real defense but only for the Dreamer.\n* [Action]: Any material may be chosen to provide [Skill] defense for the user."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Plumbing", ":titles", "Plumber"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Point Defense"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Poison Bite", ":summary", "* [Skill]: [Close Combat]\n* [Crits] are [Poisoned] instead of increasing damage."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Poison Blood"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Poison Spit"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Poison Spray"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Poison Sting", ":reference", "* A little puncture and a lot of pain. - Spell Slinger, Runeterra"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Poison Tolerance", ":reference", "* B: To think, all that time it was your cup that was poisoned. M: They were both poisoned. I spent the last few years building up an immunity to Iocane powder. - Buttercup, Man In Black Princess Bride", ":summary", "* [Skill]: [Assasination]\n* Become resistant to a particular poison by taking small amounts of it over a long period."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Poison Touch"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Poisoned Arrow"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Poisoned Blade"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Poisoned Dust"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Poisonous Flesh", ":summary", "* Poisonous if bitten"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Poisonous Skin", ":summary", "* Poisonous to the touch"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Poisoning"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Polymorph", ":reference", "* She turned me into a newt. A newt? Well I got better. - Monty Python and the Holy Grail", ":summary", "* [Skill]: [Transmutation] vs. [Spirit].\n* A unit with 0 Spirit due to polymorph changes into any creature desired of equal Body. When the damage inflicted by Polymorph is removed, the unit returns to normal."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Porting", ":summary", "* Bear Litter\n* Port Boat", ":titles", "Bearer, Porter"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Pottery", ":titles", "Potter"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Pounce", ":summary", "* [Power]: [Natural Weaponry] vs. [Body]\n* Drop into a crouch and then explode into a mighty leap at his prey attempting to knock down the opponent.\n* [Aerial]\n* +1 Accuracy\n* +1 Move\n* Criticals - [Knockdown]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Power Leap"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Power Lift", ":summary", "* Lift additional kg equal to Power Rating."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Power Strike", ":summary", "* Add Power Rating to weapon damage using Melee, or Close Combat."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Power Throw", ":summary", "* Add Power Rating to weapon damage when throwing any object or weapon."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Precedent", ":summary", "* [Skill]: [Law]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Prepare Acid"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Prepare Anti-Coagulant", ":summary", "* Create an Anti-Coagulant Poison. A target with Anti-Coagulant cannot easily stop [Bleeding]."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Prepare Antidote", ":summary", "* Skilled in antidote creation.  Can create an antidote for any Poison user can brew."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Prepare Poison"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Prey", ":summary", "Will target those with the given criteria. Will for prey."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Prison Facilities", ":titles", "Brig", ":summary", "* [Power]: [Cabin]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Prosecute", ":summary", "* [Skill]: [Law]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Psychic Duel", ":reference", "Professor X vs. Shadow King"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Psychic Knife", ":reference", "Psylocke, X-men"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Punch", ":summary", "* [Skill]: [Close Combat]\n* [Damage]: [Body] [Bash]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Puzzles", ":summary", "* Expert at puzzles.\n* [Skill]: [Brilliance]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Quarters: Captain", ":summary", "* Special Quarters for the Captain.\n* [Power]: [Cabin]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Quarters: Crew", ":summary", "* Special Quarters for the Crew.\n* [Power]: [Cabin]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Quarters: VIP", ":summary", "* Special Quarters for VIPs.\n* [Power]: [Cabin]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Quick Draw", ":summary", "* [Requires]: 1 Handed Firearm\n* [Free]: Move:-1 to draw a Hand weapon from holster to hip where he can [Hip Shoot]."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Quill Attack"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Rabid", ":summary", "* [Power]: [Diseases]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Radar Dampener", ":summary", "* By activating this system, the armor reduces all radar signatures. Use of any system (even passive ones) will negate the stealth.\n* [Continuous Action] - Stealth vs. Radar"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Radar Jammer", ":summary", "* By activating this system, the armor emits powerful radar white noise.\n* [Continuous Action] - [-Range] Radar sensors detection to any target within range."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Rally", ":summary", "[Action]: Units within Range:Skill are placed into a [Formation] they all share."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Rapid Metabolism", ":summary", "* [Power]: [Special Ability]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Rapid Strike", ":reference", "In One Timing means, when you have closed with the enemy, to hit him as quickly and directly as possible, without moving your body or settling your spirit, while you see that he is still undecided. The timing of hitting before the enemy decides to withdraw, break or hit, to be able to hit in the timing of an instant. - Miyamoto Mushashi, The Book of Five Rings", ":summary", "* [Requires]: Wear loose clothing or less. (Armor Penalty = 0).\n* [Action]: Speed +1, Attack -1", ":titles", "In One Timing, Lightning Blow"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Rapture", ":summary", "* An extremely difficult and rare ability of self-discovery to create Glamour from oneself. Only at a moment of sudden self-realization can a Rapture be attained.\n* [Passive] - While in a Rapture, all [Critical] results generate [Glamour Token]s."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Rationalize", ":summary", "* Increases resistance to all forms of mental attack by reinterpreting and rationalizing commands to render them meaningless.\n* [Skill]: [Brilliance]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Ravaging", ":summary", "* Drain creativity from a subject. The subject must be well known and a good knowledge of how the subject dreams is required. After that, the subject must simply be touched and he/she will experience a wave of depression and fear as the Glamour is drained from them.\n* [Action]: Touch the subject. Roll [Banality]. Gain +1 [Glamour Token] if any successes. If no [Glamour] is gained, both the user and subject gain +1 [Banality] instead."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Reactive Armor", ":summary", "* Exterior layer of armor explodes on impact reducing damage of the first hit but reduces armor rating for all subsequent hits.\n* [Passive] - +2 Armor vs. the first hit. -1 Armor for each subsequent hit."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Refinery: Gas", ":summary", "* Can refine gas. Must be modified for each type of gas.\n* [Power]: [Factory]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Refinery: Oil", ":summary", "* Can refine oil. Must be modified for each type of oil.\n* [Power]: [Factory]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Refinery: Ore", ":summary", "* Can refine ore. Must be modified for each type of ore.\n* [Power]: [Factory]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Regeneration", ":summary", "* [Power]: [Healing]\n* [Passive]\n* [Bleeding] and [Damage] Tokens are considered Yellow Tokens."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Regrowth", ":summary", "* [Power]: [Healing]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Reign of Terror", ":summary", "* Use to rally troops\n* [Skill]: [Intimidation] vs [Will]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Reincarnation", ":reference", "* Doctor Who", ":summary", "* Be reborn into a new body.\n* [Power]: [Longevity] [Shamanism]\n* Similar to [Resurrect], this ability allows a being to return to life in a new body if this ritual is performed soon after death. The reincarnated being will be physically different from the original, potentially different age, abilities, gender, race, or species. The being will have most of its original memories, but will often have a substantially different personality. If any [Successes] are made, the reincarnation succeeds and the character must be created again with significant differences and will appear in a location consistent with its new identity. The new character is built at a level equal to it original level or the reincarnate skill level whichever is lower. If the reincarnate skill level is lower than 10, the reincarnated being will be -10% younger than before for each level below 10."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Reincarnation - Transference", ":reference", "* Body Banks - Micronauts", ":summary", "* Transfer your consciousness into another body.\n* [Power]: [Longevity]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Resist: Cold", ":summary", "* [Passive] - Armor:+1 vs. Cold"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Resist: Corrosion", ":summary", "* [Passive] - Armor:+1 vs. Corrosive Agents"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Resist: Electricity", ":summary", "* [Passive] - Armor:+1 vs. Electricity"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Resist: Energy", ":summary", "* [Damage]: [+2 Armor] if attack is an [Energy Weapon]\n* Only 1 Hardened vs. ability may be taken"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Resist: Fire", ":summary", "* [Damage]: [+2 Armor] if attack produces [Fire] tokens\n* Only 1 Hardened vs. ability may be taken"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Resist: Magnetism", ":summary", "* Reduces the chance that a magnetic attachment can hold on the armor (assuming it is metallic).\n* [Passive] - Armor:+1 vs. Magnetism"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Resist: Piercing", ":summary", "* [Damage]: [+2 Armor] if attack is a [Projectile]\n* Only 1 Hardened vs. ability may be taken"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Resist: Plasma", ":summary", "* Detects and disrupts the magnetic bottle surrounding plasma rounds causing them to detonate too early.\n* [Passive] - Armor:+1 vs. Plasma"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Resist: Poison", ":reference", "...it was your cup that was poisoned.  They were both poisoned.  I spent the last few years building up an immunity to iocane powder. - Princess Bride"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Resist: Pressure", ":summary", "* [Passive] - Armor:+1 vs. Pressure and Impact"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Resist: Radiation", ":summary", "* [Passive] - Armor:+1 vs. Radiation"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Restful Sleep", ":summary", "Ensure restful sleep for levelx2 hours."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Retrieve", ":summary", "* [Skill]: [Animal Handling]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Returning Throw"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Reverie", ":summary", "* Say or suggest things that inspire others to wonderful ideas and creations. This is a time-consuming process to discover they subtle things that inspire another to great works.\n* [Extended Action]: Inspire someone while they create.\n* [Action]: View a work of art created during Reverie. Gain +1 [Glamour Token]. A particular work of art may only grant this bonus once a year.", ":titles", "Muse"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Richochet", ":summary", "* [Requires]: Thrown Object"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Riposte", ":reference", "When your swords clash together, in one motion when your sword springs away from theirs, use a continuous motion to slash their head, body and legs.", ":summary", "* Speedy attack that can only be performed after a [Parry] or a [Block].\n* [Requires]: Previous Action was [Parry] or [Block]\n+2 Initiative\n+2 Attack", ":titles", "Counter Strike"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Ripping Bite", ":summary", "* The fighter strikes a limb with the intention to disable his opponent.\n* -1 Initiative\n* -1 Damage\n* +1 Critical - [Bleeding] or [Weakness]", ":titles", "Jaws of Death"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Roar", ":summary", "* [Skill]: [Intimidation] vs [Will]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Salvo", ":summary", "* The simultaneous discharge of weapons, rather than scattered 'fire at will'.\n* Up to 10 weapons of the same type can be in 1 Salvo.\n* All targets in the space are attacked."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Sapping", ":reference", "* If it was important, then they should have built it better. - Desert Naturalist, Runeterra", ":summary", "* [Skill]: [Demolitions]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Savage", ":summary", "* [Power]: [Special Ability]\n* Must Attack if able.\n* Ignores Fear, Despair, and Morale"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Savage Genitalia", ":summary", "* Male variations include excessive length, hardness, spines, and thorns.\n* Female variations include teeth, ripping suction, crushers, and grinders.\n* [Hidden Weapon]\n* -2 Initiative\n* -1 Accuracy\n* +1 Critical"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Scales of Justice", ":summary", "* [Skill]: [Law]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Scientific Genius"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Scouting", ":titles", "Reconnaissance", ":summary", "* [Skill]: [Hunting]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Sculpture", ":summary", "* [Skill]: [Art]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Search", ":summary", "* Rummage around for things:\n* [Skill]: [Investigation]\n** ONCE, IF you searched a location and found an [Item], you may reshuffle that [Item] into its location and draw again."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Second Sight", ":reference", "* I've got electric light, and I've got second sight.  I've got amazing...powers...of observation.  And that is how I know...When I try to get through...On the telephone to you...There will be nobody home. - Pink Floyd, Nobody Home", ":summary", "* [Power]: [Shamanism]\n* Second sight is the ability to see the spiritual essence of beings. It quickly identifies the living from the unliving and can detect disease both phyiscal and mental."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Seeing Eye Training", ":summary", "* [Skill]: [Animal Handling]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Seeming", ":summary", "* Take on the appearance of another."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Seduction", ":titles", "Femme Fatale, Vamp", ":reference", "* But what of all those sweet words you spoke in private?  Oh that's just what we call pillow talk, baby, that's all. - Ash, Army of Darkness\n* But you don't understand. That men are weak? \n* Guess I must be dumb. She had a pocket full of horses, trojan and some of them used... I guess I should have closed my eyes when you drove me to the pace where your horses run free. Cause I felt a little ill when I saw all the pictures of the jockeys that were there before me. Believe it or not, I started to worry. I wondered if I had enough class. But it was Saturday night, I guess that makes it alright. And you say, Baby have you got enough gas? Oh, Yeah! - Prince, Little Red Corvette", ":summary", "* [Skill]: [Persuation]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Sensory Deprivation"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Sensory Overload"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Servant", ":titles", "Butler, Footman, Lady in Waiting"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Set Against Charge"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Sewing", ":titles", "Dressmaker, Seamstress", ":reference", "* Every tapestry begins with a single stitch. - Taliyah, Runeterra", ":summary", "* [Skill]: [Tradeskill]\n* Crochet\n* Embroidery\n* Fashion Clothing\n* Needlepoint\n* Repair Cloth"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Shakedown", ":reference", "* How many times you been in a lineup? It's always you and four dummies. PD are paying homeless guys $10 a head half the time. And there's no way they'd line five felons in the same row. No way - Keaton, Usual Suspects", ":summary", "* [Skill]: [Law]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Shattered Dreams"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Skeletal", ":summary", "* [Power]: [Special Ability]\n* Ignores [Bleeding], [Poison], and [Disease]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Shield Modulation", ":summary", "* [Power]: [Shielding]\n* Alter the Shielding to Resist a single [Damage Type] while becoming vulnerable to 2 others."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Shield Redirection", ":reference", "* Switch your deflector shields on -- double front! - Garven Dreis, Star Wars", ":summary", "* [Skill]: [Shielding]\n* Alter the Shields to increase Shielding in a single Arc by 1 by decreasing all other Arcs by 1."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Shield Snare", ":summary", "* [Skill]: [Defense]\n* [Requires]: Javelin, Target with shield\n* [Attack]: Criticals are [Encumberance] Tokens."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Shipyard: Aircraft", ":summary", "* Can produce aircraft. Must be modified for each type of aircraft.\n* [Power]: [Factory]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Shipyard: Mobile", ":summary", "* Can produce mobile weapons. Must be modified for each type of mobile.\n* [Power]: [Factory]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Shipyard: Naval", ":summary", "* Can produce ships. Must be modified for each type of ships.\n* [Power]: [Factory]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Shipyard: Spaceship", ":summary", "* Can produce spaceships. Must be modified for each type of ships.\n* [Power]: [Factory]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Shockwave", ":summary", "* [Power]: [Strength]\n* Knockdown everyone in the area."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Sidestep"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Signal Shot", ":summary", "* Alert allied units by sending a prearranged signal. This can be flaming arrow at night, smoking arrow, singing arrow, etc.\n* [Requires]: Bow or Crossbow\n* [Action]: For the rest of the turn, other units adjacent to this unit may be treated as if under the [Sphere of Command] of any allied Commander."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Simplify, Simplify, Simplify", ":summary", "* Progressively breakdown a problem into simpler problems which can each be resolved separately.\n* [Skill]: [Brilliance]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Sleight of Hand", ":summary", ":summary", "* [Skill]: [Deception]\n* Hide a small object in hand without being noticed.", ":titles", "Legerdemain"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Sleight of Mind", ":summary", "* [Power]: [Illusion]\n* [Slow] [Even] [Mind]: +1 [Stress]. Create a distraction."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Smuggling", ":summary", "* [Skill]: [Deception]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Snake Charming", ":summary", "* [Skill]: [Animal Handling]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Snare"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Sneak", ":summary", "* Move silently: [Passive]: You may move at half speed (rounded down) without cancelling [Stealth] abilities."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Sneak Attack", ":titles", "Suprise Attack"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Snowcraft", ":summary", "* Ignore Snow Move penalty\n* Off Snow Slow:+1."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Soul Pact", ":summary", "* Death: Enter a specified Demon Realm. This ability is automatic and is not optional."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Soulbind", ":titles", "Soulbond"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Soulburn"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Souldrain", ":titles", "Spiritsiphon"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Soulforge"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Soulless", ":summary", ":summary", "* [Power]: [Special Ability]\n* A soulless unit is not truly alive. It may not use or gain Spirit skills."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Soulrend", ":titles", "Soulrip", ":reference", "* We'll tear your soul apart! - Pinhead, Hellraiser"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Soulshatter"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Soulsteal", ":reference", "Primitive people may see a photograph as stealing the soul."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Soulstain"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Soulstone", ":titles", "Souljar"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Soulstrike"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Soulvise"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Soulwrack"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Space Clearing", ":summary", "[Requires]: 2 handed Weapon\n[Combat]: Attack in a circle around you. Anyone hit get [Push]:1."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Speed Reading"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Spines"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Spinning Bird Kick", ":reference", "* Chun-Li, Street Fighter", ":summary", "* The fighter bends over, places his hands on the ground, and then presses his legs up into a spinning handstand. The legs snap outward with tremendous momentum striking opponents in [Arc:Front], [Arc:Left], and [Arc:Right].\n* [Skill]: [Close Combat]\n* [Requires]: [Handstand Kick]\n* Initiative:-1\n* Move:-1\n* Damage:+1"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Spirit Guide", ":summary", "* [Power]: [Shamanism]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Spiritual Affinity", ":summary", "* [Power]: [Shamanism]\n* Death: Enter the Spirit Realm"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Stage Magic", ":summary", "* [Skill]: [Deception]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Stagecraft", ":summary", "* The technical aspects of theatrical production, which include scenic design, stage machinery, lighting, sound, costume design, and makeup.", ":titles", "Stagehand"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Stalk", ":summary", "* The ability to move carefully to avoid detection.\n* [Requires]: No other action may be performed this turn.\n* [Action]: Move at half speed. Any attempt to act toward you, first requires an Mind vs. your skill or fail."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Stare Down", ":summary", "* [Skill]: [Animal Handling] vs. [Will]\n* Causes an animal to hesitate or back down."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Sting"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Storm Chamber", ":summary", "* Specially shielded chamber designed to be a safe room for particularly dangerous events including radiation flares and decompression.\n* [Power]: [Cabin]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Strategic Warp Jump", ":summary", "* A ship with a Warp Engine may perform a strategic warp jump and instantly remove itself from combat, returning to the strategic map.\n* A unit already on the strategic map may move [Skill] spaces on the strategic map.\n* [Requires]: The unit must cease maneuvering and must perform this ability for 3 consecutive turns.\n* [Action]: On the second consecutive action, the unit immediately removes all Vector tokens and moves the unit to any other space on the map."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Strike and Fade", ":summary", "* [Requires]: No other action may be performed this turn.\n* [Attack]: After this attack, if you have sufficient Move remaining, move 1 space."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Stunning Blow", ":summary", "* [Attack]: Trades lethal damage for stunning damage."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Stunning Throw", ":summary", "* [Requires]: Thrown Object\n* Trades lethal damage for stunning damage."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Suffocate", ":summary", "* Draw the air away from a target.\n* [Power]: [Air] or [Aeromancy] vs [Speed]\n* [Damage]: [Choking]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Summon Demon", ":titles", "Demonic Summoning"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Summon Devil", ":titles", "Diabolic Summoning"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Summon Familiar", ":reference", "* Animal companions, such as cats, that are either trained to assist in magic, or are used as a mascot.", ":summary", "* Summon an animal shaped familiar spirit to serve as a companion, servant, spy, etc.\n* The Familiar is highly intelligent and must be bargained with before it agrees to serve.\n* Duration: Indefinite.\n* The Familiar will age with its master.\n* The Familiar can gain abilities that its master possesses.\n* Three mystic cords are constructed to link the Familiar to its master.\n** Golden Cord - Connects magical abilities.\n** Silver Cord - Connects the minds.\n** Bronze Cord - Connects the bodies.\n!Familiar Skills\n* Shapechange to Human Form\n* Giant Growth (Self)\n* Communicate with Master\n* Speech"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Summon Id Monster", ":summary", "[Call] [Id Monster]", ":reference", "Monsters, John, monsters from the Id! - Ostrow, Forbidden Planet"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Summon Item", ":summary", "* A single item may be attuned to a summoning. Later that item may be summoned to the owner's hand."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Survival: Jungle", ":titles", "Jungle Dweller, Lord of the Jungle", ":reference", "Tarzan", ":summary", "* This ability is used to avoid or mitigate the common hazards encountered while delving into the jungle. This can also be used to avoid the attention of random predators.\n* [Requires]: Unit must be a [Light Unit]\n* [Survival]: [Survival]:+1 in [Jungle]\n* [Stealth]: IF Level>1 THEN [Stealth]:+1 in [Jungle]\n* [Combat]: IF Level>2 THEN [Inititiative]:+1 vs Ranged in [Jungle]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Swallow Whole", ":reference", "* I do not require a menu. - Tahm Kench, Runeterra\n* Come along. There's room for everyone. - Tahm Kench, Runeterra"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Swap Sensations", ":summary", "* Swap sensations with Rival.\n* [Power]: [Empathy] or [Curses]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Sweep", ":summary", "* Attack the legs to trip the opponent.\n+1 Initative\n-1 Move\n-1 Damage\nCriticals - [Knockdown]", ":titles", "Trip"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Swerve", ":summary", "* [Skill]: [Driving]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Tabula Rasa"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Tactical Genius"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Tactical Warp Jump", ":summary", "* A ship with a Warp Engine may perform a tactical warp jump and instantly transport from any space on the map to any other.\n* [Requires]: The unit must cease maneuvering and must perform this ability for 2 consecutive turns.\n* [Action]: On the second consecutive action, the unit immediately removes all Vector tokens and moves the unit to any other space on the map."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Tag and Bag"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Tail Sweep"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Tailing", ":summary", "* Subtly pursue someone. Ideally, you must stay as far away as possible without losing track of your quarry. Completely unaware people are easy to pursue. Paranoid targets will attempt to spot tailing and may attempt to evade tails even when they do not know they are being tailed."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Tainted", ":summary", "* [Power]: [Special Ability]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Tanker Hold", ":summary", "* The hold is equipped to hold large amounts of liquids or gases at appropriate environments. This can be used for long range vessels to carry their own fuel or act as a fuel tanker.\n* [Power]: [Cargo]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Taxadermy", ":summary", "* Stuff and Mount creatures for display\n* [Skill]: [Tradeskill]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Terrorize", ":summary", "* [Skill]: [Intimidation] vs [Will]\n* [Attack]: Any [Critical Hits] may be [Retreats]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "There are Many Enemies", ":reference", "When you are fighting one against many, draw both sword and companion sword and assume a wide-stretched left and right attitude. The spirit is to chase the enemies around from side to side, even though they come from all four directions. Observe their attacking order, and go to meet first those who attack first. Sweep your eyes around broadly, carefully examining the attacking order, and cut left and right alternately with your swords. Waiting is bad. Always quickly re-assume your attitudes to both sides, cut the enemies down as they advance, crushing them in the direction from which they attack. Whatever you do, you must drive the enemy together, as if tying a line of fishes, and when they are seen to be piled up, cut them down strongly without giving them room to move. - Miyamoto Mushashi, The Book of Five Rings", ":summary", "* [Requires]: [Duel Wield]\n* [Defense]: If [Surrounded], ignore opponents in front arc when determining [Surrounded] defense penalty."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "There is No Escape", ":reference", "* Raiden Shogun, Genshin Impact"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Thieves Guild Codes", ":summary", ":summary", "* [Skill]: [Deception]\n* Thieves must conceal their illegal conversations and the guilds have developed a shifting series of hand signals, marks, and code words to communicate simple concepts without arising suspiscion."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Thrust", ":summary", "+1 Initiative\n+1 Move\nCritcals - [Piercing]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Thunderclap", ":summary", "* [Power]: [Strength]\n* Stun everyone in the area."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "To Apply Stickiness", ":reference", "When the enemy attacks and you also attack with the long sword, you should go in with a sticky feeling and fix your long sword against the enemy's as you receive his cut. The spirit of stickiness is not hitting very strongly, but hitting so that the long swords do not separate easily. It is best to approach as calmly as possible when hitting the enemy's long sword with stickiness. The difference between 'Stickiness' and 'Entanglement' is that stickiness is firm and entanglement is weak. - Miyamoto Mushashi, The Book of Five Rings"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Tongue Lash"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Torment", ":reference", "* I heard all the screaming. I was starting to get jealous. - Domination and Evelynn, Runeterra", ":summary", "* [Skill]: [Intimidation] vs [Will]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Torture", ":reference", "* Your cries of agony, where will they not reach?  Where on Citaeron will they not re-echo?  No man living will meet a doom more terrible than yours. - Sophocles, Oedipus Rex\n* Oh, Its always over so soon. - Evelynn, Runeterra", ":summary", "* [Skill]: [Intimidation] vs [Will]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Totem", ":summary", "* [Power]: [Shamanism]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Tower of Iron Will"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Track"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Tracked"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Train Dog", ":summary", "* [Skill]: [Animal Handling]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Train Elephant", ":summary", "* [Skill]: [Animal Handling]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Train Horse", ":summary", "* [Skill]: [Animal Handling]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Trample"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Transparent", ":summary", "* [Power]: [Invisibility]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Trial", ":summary", "* [Skill]: [Law]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Trial By Fire", ":summary", "* [Skill]: [Law]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Trial By Ordeal", ":summary", "* [Skill]: [Law]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "True Immortality", ":reference", "* Captain Jack Harkness - Doctor Who", ":summary", "* Can't die under normal circumstances.\n* [Power]: [Longevity]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Tunneling", ":summary", "* [Power]: [Digging]\n* Create caves underground."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Turbo Booster", ":titles", "Boost, Nitro, Turbo, Turbo Charger"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Turret Mount", ":summary", "* A special mount to add a turreted weapon on the back of the armor."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Tusk Gore"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Ultraviolet Jammer", ":summary", "* By activating this system, the armor emits a powerful blinding strobe in the ultraviolet band.\n* [Continuous Action] - [-Range] Ultraviolet sensors detection to any target within range."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Undead", ":summary", "* Immune to [Bleeding] and [Fear]. Does not target other [Undead]."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Undermine", ":summary", "Damage walls."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Underwater Operation", ":summary", "* Sealed against water and can operate underwater. Small thrusters allow slow movement underwater. Oxygen scrubbers allow extended underwater operation."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Unsolvable Problem", ":reference", "* Kirk: Everything Harry says is a lie. Remember that, Norman. *Everything* he says is a lie.\n* Mudd: Now I want you to listen to me very carefully, Norman. I'm... lying.\n* Norman: You say you are lying, but if everything you say is a lie, then you are telling the truth, but you cannot tell the truth because you always lie... illogical! Illogical - I, Mudd, Star Trek", ":summary", "* Fool the target into trying to resolve a problem with no easy solution.\n* [Skill]: [Brilliance]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Unstoppable", ":reference", "* Juggernaut", ":summary", "* [Power]: [Inertia]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Use Blinding Powder", ":summary", "* [Skill]: [Deception]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Use Flash Powder", ":summary", "* [Skill]: [Deception]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Use Irritating Powder", ":summary", "* [Skill]: [Deception]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Use Sleeping Powder", ":summary", "* [Skill]: [Deception]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Vanish", ":reference", "* Smoke Bomb! - Krieger, Archer", ":summary", "* [Skill]: [Deception] or [Stealth]\n* If you can momentarily break line of sight, you can immediately [Hide]."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Ventriloquism", ":summary", "* [Skill]: [Deception]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Vision Quest", ":summary", "* [Power]: [Shamanism]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Wall Crawling"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Wall of Wonders", ":summary", "* [Power]: [Dreaming]\n* A wall of dreams. Causes [Fascination] in those who view it."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Wall Running", ":summary", "* [Power]: [Movement]\n* Requires: [Wall Crawling]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "War Training", ":summary", "* [Skill]: [Animal Handling]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Water Walking", ":summary", "* [Power]: [Hydromancy] or [Water]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Water Running", ":summary", "* [Power]: [Hydromancy] or [Water]\n* Requires: [Water Walking]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Weapon Block", ":summary", "* Deflect, catch, or even turn strike back with a weapon used against the fighter.\n* This ability provides a second Defense roll against a weapon attack before the regular Defense roll.\n* [Reaction]\n+2 Initiative\n+1 Accuracy\n0 Damage - Any successes become -Damage to the weapon. If the weapon has 0 Damage remaining, it is caught.\nCriticals - Any Criticals become -2 Damage to the weapon. If the weapon has 0 Damage remaining and there are still Criticals, the weapon may be immediately used at +[Criticals] Accuracy. Note: The weapon remains in the hands of the attacker."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Weaponsmith", ":titles", "Bladesmith, Swordsmith", ":summary", "* The ability to repair, improve, or even create weapons.\n* [Razor's Edge] - Work a weapon to give a +1 Synergy the first time it hits."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Wheeled"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Whirlwind Attack", ":summary", "* Allows multiple attacks to different targets by trading accuracy for extra attacks."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Without a Trace", ":summary", "* Extremely difficult tor track you."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Woodworking", ":titles", "Carver, Whittler, Woodworker", ":summary", "The process of building, making or carving something using wood."),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Word of Command", ":summary", "* [Power]: [Domination]"),
      vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Zombified", ":summary", "* [Undead]: Immune to [Bleeding] and [Fear]. Never targets [Undead].\n* [Mindless]: Does not avoid [Hazard].\n* [Prey]: [Bleeding], [Prone] within 2 Moves. Will [Disengage] for prey.\n* [Savage]: Must attack if able. Ignore Fear, Despair, and Morale.\n* [Zombie Plague]:\n** IF a unit suffers a [Pierce] [Bite]\n** THEN at the beginning of each [Turn], take [Fatigue]:+1 or [Stress]:+1 until cured.")
    )
    return output
  }

  /**
   * @function tactics_abilitymap_from_tactics
   * Returns a tactics updated with abilitymap
   * @param  {tactics} tactics
   * @return {tactics}
   */
  static t_tactics_abilitymap_from_tactics = {
    vx_type: vx_core.t_type
  }
  static e_tactics_abilitymap_from_tactics = {
    vx_type: nx_tactics_decks_ability.t_tactics_abilitymap_from_tactics
  }

  // (func tactics-abilitymap<-tactics)
  static f_tactics_abilitymap_from_tactics(tactics) {
    let output = nx_tactics_base.e_tactics
    output = vx_core.f_let(
      {"any-1": nx_tactics_base.t_tactics},
      [],
      vx_core.f_new_from_type(vx_core.t_any_from_func, () => {
        const abilitymap = nx_tactics_decks_ability.f_abilitymap_tactics(tactics)
        return vx_core.f_copy(tactics, ":abilitymap", abilitymap)
      })
    )
    return output
  }



  static {
    const constmap = vx_core.vx_new_map(vx_core.t_constmap, {
      
    })
    const emptymap = vx_core.vx_new_map(vx_core.t_map, {
      "abilitymap-tactics": nx_tactics_decks_ability.e_abilitymap_tactics,
      "tactics-abilitymap<-tactics": nx_tactics_decks_ability.e_tactics_abilitymap_from_tactics
    })
    const funcmap = vx_core.vx_new_map(vx_core.t_funcmap, {
      "abilitymap-tactics": nx_tactics_decks_ability.t_abilitymap_tactics,
      "tactics-abilitymap<-tactics": nx_tactics_decks_ability.t_tactics_abilitymap_from_tactics
    })
    const typemap = vx_core.vx_new_map(vx_core.t_typemap, {
      
    })
    const pkg = vx_core.vx_new_struct(vx_core.t_package, {
      "name": "nx/tactics/decks/ability",
      "constmap": constmap,
      "emptymap": emptymap,
      "funcmap": funcmap,
      "typemap": typemap
    })
    vx_core.vx_global_package_set(pkg)

    // (func abilitymap-tactics)
    nx_tactics_decks_ability.t_abilitymap_tactics['vx_value'] = {
      name          : "abilitymap-tactics",
      pkgname       : "nx/tactics/decks/ability",
      extends       : ":func",
      idx           : 0,
      allowfuncs    : [],
      disallowfuncs : [],
      allowtypes    : [],
      disallowtypes : [],
      allowvalues   : [],
      disallowvalues: [],
      traits        : [vx_core.t_func],
      properties    : [],
      proplast      : {},
      fn            : nx_tactics_decks_ability.f_abilitymap_tactics
    }

    // (func tactics-abilitymap<-tactics)
    nx_tactics_decks_ability.t_tactics_abilitymap_from_tactics['vx_value'] = {
      name          : "tactics-abilitymap<-tactics",
      pkgname       : "nx/tactics/decks/ability",
      extends       : ":func",
      idx           : 0,
      allowfuncs    : [],
      disallowfuncs : [],
      allowtypes    : [],
      disallowtypes : [],
      allowvalues   : [],
      disallowvalues: [],
      traits        : [vx_core.t_func],
      properties    : [],
      proplast      : {},
      fn            : nx_tactics_decks_ability.f_tactics_abilitymap_from_tactics
    }

  }
}
