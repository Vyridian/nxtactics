'strict mode'

import vx_core from "../../../vx/core.js"
import nx_tactics_base from "../../../nx/tactics/base.js"


export default class nx_tactics_decks_skill {

  /**
   * @function skillmap_tactics
   * Returns the base skillmap
   * @param  {tactics} tactics
   * @return {skillmap}
   */
  static t_skillmap_tactics = {
    vx_type: vx_core.t_type
  }
  static e_skillmap_tactics = {
    vx_type: nx_tactics_decks_skill.t_skillmap_tactics
  }

  // (func skillmap-tactics)
  static f_skillmap_tactics(tactics) {
    let output = nx_tactics_base.e_skillmap
    output = nx_tactics_base.f_skillmap_from_skilllist(
      vx_core.f_new(
        {"any-1": nx_tactics_base.t_skill},
        ":name",
        "Close Combat",
        ":summary",
        "* [Target]: Close combat may only be used to attack the space directly ahead or the space you are on.\n* Fighting very close to the opponent. This includes most martial arts, brawling, and knife fighting.\n* If you don't have a weapon, use the [Bare Handed] item.",
        ":reference",
        "* The usefulness of kicks in self-defense and actual combat has been debated. Kicks are powerful but risk balance, expose the groin, and risk take downs.\n* Joker, there is nothing wrong with you that I can't fix. With my hands. - Batman, The Dark Knight Returns\n* There are seven working defenses from this position. Three of them disarm with minimal contact, three of them kill. The other....hurts. - Batman, The Dark Knight Returns\n* Beat losers, get paid. - Sett, Runeterra\n* The baseline for kicking abilities is that they are -1 Speed and +1 Damage with a minor special ability.\nNAME				SPD		DMG		MV		DEF\nSHORT KICK			+  1		+  0		+  0		S,C,A\nFORWARD KICK			+  0		+  2		-- 1		S,C,A\nBACK ROUNDHOUSE			-- 2		+  2		-- 1		None				K2			*  Ignores all Blocks except for San He and Evade Blow.\n*CARTWHEEL KICK			-- 1		-- 1		+  0		S,C		(2 W)		K4, A3			*  DMG vs. all adjacent hexes; opponents who take DMG are Knocked Back one hex; Straight Line attack; the fighter may use full MV, dealing DMG each time he moves next to an opponent.\nCRESCENT KICK			-- 1		+  4		-- 2		S, miss C				K3		*  KDA\nDESCENDING WHEEL KICK		-- 2		+3 (x2)		+  0 		(Special)	(1 W)		K4, A3, Jump, Ft.Swp	*  First hit = Aerial, Block- S, miss C; Second hit = Crouching, KD, Block- C, miss A.\nFOOT SWEEP			-- 2		+  3		-- 2		C, miss A				K2, Crouch	*  KD; Crouching Maneuver.\nFORWARD CHEST KICK		+  0		+  2		-- 1		S,C,A				K3			*  KD.\nForward Flip Kick		+  1		+  5		Two		S,A		(1 W)		K3, A3, Handstand Kick	*  KD, KDA (unless blocking), (dodge move?)\n*FORWARD SLIDE KICK		+  0		+  2		+  0		C, miss A				K2, A2		*  KD\nFRONT SNAP KICK			+  2		+  2		None		S,C,A				K2			**\nHAMMER KICK			-- 2		+ 3, + 4	-- 2		C,miss A	(1 W)		K3,(x2)K,Ft.Swp		*  KD; Hits Downed opponents.\n*HEEL STAMP			+  2		-- 4		+  1		S,C, miss A			K1, A1			*  Opponent is Knocked Back (Fighter's Str. + Athletics) - Opponent's Str.; Fighter is KnockedBack 1.\nJUMPING SOBAT(TO)		-- 1		+  4		Two		S,C,A				K2, A1, Jump		*  Aerial. (MY: Aviods Sweeps [fist,foot,spin foot], may only be blocked C or w/ Kick Def) This is charlie's hop toward low kick.\nKNEE DROP			-- 1		+  3		-- 1		(miss S,C,A)			K2, A1			*  Attacks Downed opponents only.\nLONG SWEEP KICK			-- 2		+  3		None		C, miss A			K2, Crouch, Foot Sweep	*  KD; Crouching; this maneuver may be used to strike an opponent who is 1 Hex away.\nPUSH KICK (STOMACH KICK)	+  0		+  1		+  0		S,C,A				K2			*  Knockback.\nRISING BIRD KICK		-- 1		+  0(x3)	One		S,C		(1 W)		K4,A4,Jump,Dbl-Hit Kick	*  KDA; Aerial Maneuver.\nShin Strikes			(+ 0)		(+ 1)		(+ 0)		(Normal)			K3			*  used in conjunction with any basic Kick; the fighter must be in an adjacent Hex to use this maneuver.\nSPINNING FOOT SWEEP		-- 2		+  3(x2)	None		C, miss A	(1 W)		K2, A1, Foot Sweep	*  DMG is dealt to all adjacent hexes, target in front of fighter is struck twice; KD; Crouching.\nSPLITS KICK			-- 1		+  4		One		S, miss C			K2			*  KDA\nSTEPPING FRONT KICK		+  0		+  1(x2)	+  1		S,C		(1 W)  		K4, Double-Hit Kick	*  Fighter must MV into opponent's hex; 1st hit causes Knockback.\nStudder Step Kick		+  1		+  2		One		C(miss A)			K3, A1			*  Must be blocked low.\nTHRUSTING FORWARD KICK		+  1		+  2		+  1		S, C		(1 W)		K2, A1			*  Aerial Maneuver; KDA.\n\n\nPunch\n\nName             Speed      Damage     Move      Defense\n\nJab                  +2          -1         +0       S,C,A\n\nStrong Punch        +0          +1         +0       S,C,A\n\nFierce Punch        -1          +3         -1       S,C,A\n\n----------------------------------------------------------------\n\nBoshi-Ken(Thumb Drive)-1          +2          +0      S,C,A\nP2,A2\nxIf damage is scored opponent suffers -1 move next round.\n\nBuffalo Punch         -2           +5          One     S,A\nP2\n\nBushin Air Elbow    +2           -1           +2     S,A\nP3,A1,Elbow Strikes,Jump\nxAerial Maneuver\n\nCaber Punch         -2           +3           -1     S,C,A\nP2,Str4\nxKD\n\n\nCobra Hand Strike   +3           +1           +1     S,C,A\n(1W)   P3\n\nDash Punch          +0           +4           +2     S,C\n(1W)   P4,A1\n\nDash Uppercut       +0           +4          +2     S,miss C\n(1W)   P4,A1,Dash Punch\nxKDA\n\nDouble Hit Punch    -1           +0(x2)       +0     S,C,A\nP2\n\nEar Pop           -1           +0           -1     S,C,A\nP2\nxIgnores Sta:fighter -1 Honor\n\nElbow Barrage       +0           +0(x3)     One      S,C\n(1W)   P4,Elbow Smash,Elbow Strikes\nxMust be in opponent's hex\n\nElbow Drop      +0           +2           +0     miss S,C,A\nP2,A1\nxMust be used on Downed opponent; If opponent is interrupted he\nloses action and is still considered downed at the end of round.\n\nElbow Smash      +2           +2          One     S,C,A\nP1\n\nElbow Strikes    (+0)        (+1)         (+0)    (normal)\nP3\nxUsed in conjunction with any basic punch, must be in opponent's\nhex.\n\nFist Sweep        -1           +3           -2     C,miss A\nP3\nxCrouching Maneuver;KD\n\nFlaming Dragon Punch-1          +6(x3)       -2     S,C\n(1C,1W) P5,A1,F2,Dragon Punch\nxKD;Knockback 1(all);->Aerial Maneuver\n\nHand Of The Crane  +1          +0           +0    (Normal)\nP4\nxMay be used in conjunction with any basic Punch while standing.\n\nHand Of The Eagle Claw+1       +0           +1    (Normal)\nP4,A3,Jump\nxMay be in conjunction with any basic Punch while Aerial.\n\nHand Of The Striking Mantis+0     +0        +0    (Normal)\nP4,A2,Dex4\nxMay be used in conjunction with any basic Punch while standing:\nfighter may strike opponent one hex away.\n\n\nHook                   +0        +3       -2        S,C,A\nP1\n\nIron Palm(Tieh Sha Chang) +0       +4        -1       None\n(1C) P4,F4\nxIgnores Blocks;KDA\n\nKidney Punch           +0        +2       +0        S,C,A\nP2\nxFighter must be behind opponent or in opponent's hex to execute\nthis maneuver; following round opponent is -1 SPD.\n\nLunge Punch       +0        +1       +1        C\nP3,A1\n\nNeck Shatterer         -1        +4       -2        S,miss A\nP2,Elbow Strikes\n\nPalm Heel Punch       -2        +3       +0        S,C,A\nP2\nxWhen DMG is dealt treat total as if it were one higher for\npurposes of calculating dizzy.\n\nPower Uppercut       -1        +3       One       S,C\nP1\nxKDA\n\nRazor Fist Punch      +1        +4       +0        S,C\n(1C,1W) P5\nxKnockback1;DMG is Aggrivated\n\nRekka Ken           (+3)      (+0)     (+0)      (Normal)\n(1W per turn)P4,A2\nxUsed with any basic punch; can be used for up to 3 turns; if\nused full 3 turns next round must be spent taunting, or lose 3\nGlory; Combo to dizzy.\n\nReverse Fist Punch    +0(+2)   +2        One      S,C,A\nP1\nx+2 SPD if punch follows a set up punch.\n\nRushing Strong        +0        +1       +1        S,A\nP2\n\nShikan Ken(knuckle fist) +1       +1        +0       S,C\nP2\nxSTR.test to knock opponent back 1 hex; KDA\n\nShockwave            +0        +0       None      S,C,miss A\n(1C) P4,F2\nxShockwave extends in straight hex line; 1 hex per dot in STR;\nKD all.\n\nSpinning Chothesline   +0       +0       -2        S,miss C\n(1W) P4,A3,Clothesline\nxDMG vs. all adjacent hexes; Knockback 1 each time DMG is dealt;\nAdvance with MV after each hit, may roll DMG again if applicable;\nDodge Maneuver.\n\nSpinning Knuckle     -1        +1(x2)    +3         S,C\n(1W) P3,A1,Spinning Back Fist\nxDodge Maneuver.\n\nStrong Decending Elvow +0       +1         +1         S,A\nP2,A1,Jump\nxAerial.\n\nSword Hand Strike     -1       +4         -2         S,C,A\nP3\nxIgnores armor,Toughskin,etc.\n\nTriple Strike         -2    (+0,+0,+1)    None      S,C,A\nP2,K1\nxRoll three damage tests as indicated, take highest two rolls.\n\nTurn Punch      Rnd 1-1        +4        Two        S,C\n(W first turn)P4       Rnd 2-1        +5        Two        S,C\n           Rnd 3+0       +6        Two        S,C\n           Rnd 4+1       +7        Two        S,C\nxCard is layed face down; May be played at any time thereafter as\nlong as card is left face down; -1 SPD,DMG,MV while charging\nmaneuver; Need not be used.\n\nUppercut           +1        +2        -1         S,C,A\nP1\nx +1DMG vs. Crouching.",
        ":titles",
        "Brawler, Grappler, Hand-to-Hand, Infighter, Martial Artist, Wrestler",
        ":stat",
        "Body",
        ":abilitymap",
        vx_core.f_new(
          {"any-1": nx_tactics_base.t_abilitymap},
          "Punch",
          nx_tactics_base.f_ability_from_tactics_key(tactics, "Punch"),
          "Kick",
          nx_tactics_base.f_ability_from_tactics_key(tactics, "Kick"),
          "Grab",
          nx_tactics_base.f_ability_from_tactics_key(tactics, "Grab"),
          "Drag",
          nx_tactics_base.f_ability_from_tactics_key(tactics, "Drag"),
          "Back Fist",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Back Fist", ":summary", "* [Arc]: Arc:Left or Arc:Right\n* Strike with the back of the fist or open hand.", ":titles", "Backhand, Bitch Slap"),
          ":Clothesline",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Clothesline", ":summary", "* [Requires]: [Close Combat]. Must have Moved this Round. [Hit Location]=Head or Shoulders\n* [Arc]: Arc:Left or Arc:Right\n* [Effect]: IF [Hit Location] is Head or Shoulders THEN Knockdown:+1"),
          "Bull Rush",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Bull Rush"),
          ":Charge",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Charge"),
          "Crouching Strike",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Crouching Strike", ":summary", "Crouch low and deliver a powerful blow to the mid-section or below the belt.\n* [Attack] [5]: +1 Effect", ":titles", "Ducking Punch"),
          "Deflecting Punch",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Deflecting Punch", ":summary", "* The fighter deflects a punch at him and immediately counters with a punch of his own.\n* [Counter]: [Effect]:+1"),
          "Dragon Strike",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Dragon Strike", ":summary", "* When striking with the fist, more power can be exerted when the movement originates from the feet, is guided by the waist, flows through the body, and exits through the fist.\n* [Attack] [J]: Push:+1, Stun:+1\n* [Aerial]", ":titles", "Dragon Fist, Dragon Punch"),
          "Ear Pop",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Ear Pop", ":summary", "* Disorienting attack that causes temporary or permanent deafness.\n* -1 Initiative\n* -1 Attack\n* +2 Stun\n* -2 Move\n* Criticals: Deafness"),
          "Elbow Drop",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Elbow Drop"),
          "Elbow Strike",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Elbow Strike", ":summary", "* Devastating blow common to Muay Thai.\n* +1 Initiative\n* +1 Damage\n* 1 Move", ":titles", "Elbow Smash"),
          "Eye Rake",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Eye Rake", ":summary", "* Disorienting attack that causes temporary or permanent blindness.\n* -1 Initiative\n* -1 Attack\n* +2 Stun\n* -2 Move\n* Criticals: Blindness"),
          "Fists of Fire",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Fists of Fire"),
          ":Haymaker",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Haymaker", ":summary", "* A slow all out attack that causes massive damage. Especially useful to finish off weakened opponents.\n-2 Initiative\n0 Move\n+2 Damage", ":titles", "Two-Fisted Smash"),
          "Head Butt",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Head Butt", ":summary", "-2 Move\n+1 Damage"),
          ":Hyperfist",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Hyperfist", ":summary", "* [Critical Hits] can be exchanged for additional Attacks. Same as [Auto].\n-2 Initiative\n-1 Damage\n1 Move", ":titles", "Hundred Hand Slap, Lightning Fist, Rapid Punch"),
          ":Jab",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Jab", ":summary", "* A quick, weak strike.\n+2 Initiative\n+1 Accuracy\n-2 Damage\n+1 Move"),
          "Knife Hand",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Knife Hand", ":summary", "* [Damage]: [Critical Hits] may reduce opponent's [Armor] roll."),
          "Knuckle Fist",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Knuckle Fist", ":summary", "* [Critical Hits] cause Knockback."),
          "Monkey Punch",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Monkey Punch", ":summary", "* Grab blocking arm and punch\n* If opponent used a block, ignore it.", ":titles", "Grab Punch"),
          "Nerve Strike",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Nerve Strike", ":summary", "* Use the tips of the fingers to strike and pinch nerve clusters to produce pain and debilitation.\n* [Action]\n* -1 Initiative\n* +1 Stun", ":titles", "Atemi Strike, Atemi Waza, Cobra Strike"),
          "One Two Punch",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "One Two Punch"),
          "Palm Strike",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Palm Strike", ":titles", "Palm Heel Strike, Shotei"),
          "Phoenix Strike",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Phoenix Strike", ":summary", "* Middle finger protrudes from fist to strike nerve clusters to cause numbness.\n* [Criticals] can be exchanged for Slow tokens."),
          ":Ram",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Ram", ":summary", "* [Action]\n* +1 Knockback", ":titles", "Shoulder Smash"),
          "Spinning Back Fist",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Spinning Back Fist", ":summary", "* The fighter spins around adding force to the blow.\n-1 Initiative\n+1 Damage\n+1 Move"),
          "Strike Defense",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Strike Defense", ":summary", "* The fighter concentrates on the strikes of the opponent but becomes vulnerable to other attacks.\n* [Reaction]\n+1 Initiative\n-1 Move\n+2 Defense vs. Strikes (-1 Defense vs. Others)"),
          "Sword Hand",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Sword Hand", ":summary", "+1 Accuracy\n+1 Damage\n-2 Move", ":titles", "Karate Chop"),
          "Tiger Claw",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Tiger Claw", ":summary", "Tiger Claw Strike"),
          ":Uppercut",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Uppercut", ":summary", "* This powerful punch starts low and ends high using the fighter's leg and back muscles to increase damage.\n* [Criticals] can be exchanged for Knockback\n-1 Initiative\n+1 Damage\n-1 Move"),
          "Axe Kick",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Axe Kick", ":summary", "* Fighter raises his leg high over his head and snaps it down toward the opponent's head and neck.\n* [High Attack]\n-1 Initiative\n-2 Move\n+1 Damage"),
          "Back Kick",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Back Kick"),
          "Backflip Kick",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Backflip Kick", ":summary", "* [High Attack]\n* [Limited] by [Acrobatics].\n+1 Initiative\n1 Move (directly backwards)\n+1 Damage", ":titles", "Flash Kick"),
          "Crescent Kick",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Crescent Kick"),
          "Double Kick",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Double Kick", ":summary", "* [Combo]: [Roundhouse Kick] followed by [Spinning Thrust Kick]"),
          "Dragon Kick",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Dragon Kick", ":summary", "-- 1		+6 (x2) 	-- 2		S,C		(1C, 1W)		K5, F4, Jump	*  Knockback; KD; -->Aerial Maneuver."),
          "Dragon Tail",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Dragon Tail", ":summary", "* The fighter drops low, extends his leg and whirls around quickly, kicking his opponents and knocking their feet out from under them.\n-2 Initiative\n-1 Accuracy\nDamage is [Knockback] instead.\nCriticals are [Knockdown] instead.", ":titles", "Iron Broom, Tiger Tail Sweep"),
          "Drop Kick",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Drop Kick", ":summary", "* Ends [Prone].\n* Kick the opponent with the soles of both feet and fall to the ground."),
          "Flying Kick",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Flying Kick", ":image", "MartialArts/FlyingKick.jpg", ":summary", "* The fighter launches himself feet first into the air toward his opponent.  He ends his move with a powerful kick, usually to the opponent's head or midsection.\n+1 Accurary\n+1 Damage\n+1 Move (Aerial in one direction)\n +  0		+  6		-- 2		S,C		(1 W)		K4, A4, Jump		*  Knockback; KD; --> Aerial Maneuver.", ":titles", "Flying Thrust Kick"),
          "Foot Stomp",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Foot Stomp", ":reference", "* The toe crusher.  That went out of style when I left kindergarten. - Kung Fu Hustle", ":summary", "* Stomp on opponent's foot to slow their movement."),
          "Handstand Kick",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Handstand Kick", ":summary", "* The fighter bends over, places his hands on the ground, and then presses his legs up into a handstand. The legs snap up with tremendous kicking force. Can be used while [Prone]\n-1 Initiative\n1 Move\n+2 Damage"),
          "Hurricane Kick",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Hurricane Kick", ":image", "MartialArts/HurricaneKick.jpg", ":summary", "-1 Speed\n-2 Attack\n* May attack up to 2 units in any surrounding spaces.", ":titles", "Butterfly Kick, Whirlwind Kick"),
          "Kick Defense",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Kick Defense", ":summary", "* The fighter concentrates on the legs of the opponent but becomes vulnerable to other attacks.\n* [Reaction]\n+1 Initiative\n-1 Move\n+2 Defense vs. Kicks (-1 Defense vs. Others)"),
          "Kick Off",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Kick Off", ":summary", "* Propel yourself and opponent apart instead of damaging. Especially useful when the opponent is near dangerous terrain.\n-1 Initiative\n+1 Accuracy\n[Hits] are [Knockback] instead.\n[Critical Hits] are [Knockdown] instead.", ":titles", "Heel Stamp"),
          "Knee Drop",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Knee Drop"),
          "Knee Strike",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Knee Strike", ":image", "MartialArts/TigerKnee.jpg", ":summary", "* Leap up to strike with the knee to the stomach, chest or face using the momentum of the leap to increase damage.\n+2 Initiative\n+1 Damage\n0 Move", ":titles", "Flying Knee Thrust, Tiger Knee"),
          "Leg Sweep",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Leg Sweep", ":summary", "* A low spinning kick designed primarily to knock an opponent of his feet.\n-2 Move\n-1 Accuracy [Low Attack]\n+1 Damage\n[Critical Hits] are [Knockdown]", ":titles", "Foot Sweep"),
          "Lightning Leg",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Lightning Leg", ":image", "MartialArts/LightningLeg.jpg", ":summary", "* [Finishing Move]\n* [Attack]: [Auto]\n LIGHTNING LEG			-- 2		+  1(x3)	None		as 100handslap	(1 W)		K3, Double Hit Kick\n*  Knockback; When this maneuver is chosen the fighter determines which of the three attacks strike high, and which strike low (2 high, 1 low; or 1 high, 2 low), this affects blocking accordingly."),
          "Reverse Front Kick",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Reverse Front Kick", ":summary", "* Feint kick past head then snap back into the back of the head or neck.\n-1 Initiative\n+1 Accuracy\n-2 Move"),
          "Roundhouse Kick",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Roundhouse Kick", ":summary", "* Fighter pivots and kicks using the momentum from the pivot to increase the damage of the kick.\n-1 Initiative\n-1 Action\n+2 Damage"),
          "Scissor Kick",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Scissor Kick", ":summary", "* Leap up and kick two opponents in different directions simultaneously.\n-1 Initiative\n0 Move [Aerial]\n-1 Damage"),
          "Side Kick",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Side Kick"),
          "Slide Kick",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Slide Kick", ":summary", "+1 Speed\n* [Low Attack]\n* Critical Hits can be [Knockdown]\n* End Action [Prone]"),
          "Spinning Thrust Kick",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Spinning Thrust Kick", ":summary", "* Fighter spins gaining momentum and thrusts with the heel.\n-2 Initiative\n-2 Move\n+2 Damage", ":titles", "Amaranth Kick, Mule Kick"),
          "Vault Kick",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Vault Kick", ":summary", "* Vault over an obstacle and land a devastating kick with all of your weight.\n+0 Move - Ignore the terrain penalty of 1 space next to the target.\n+0 Accuracy - [High Attack]\n+1 Damage\nCriticals are [Knockback]"),
          "Atomic Drop",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Atomic Drop"),
          "Air Throw",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Air Throw", ":summary", "* The fighter intercepts a leaping or flying opponent in mid-air, twists, and slams him to the ground, landing on top of him.\n* [Reaction], [Aerial]\n+1 Initiative\n+0 Damage is [Knockdown]. Damage also reduces falling Damage\nto the fighter.\nCriticals are [Knockdown]. Criticals also reduces falling Criticals\nto the fighter."),
          ":Backbreaker",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Backbreaker", ":summary", "* The fighter lifts his opponent in the air and smashes him to the ground or onto his knee. This maneuver can cause serious spinal injuries.\n* Uses a [Hold]\n-2 Initiative\n-1 Accuracy\n+2 Damage\nCriticals are [Cripple]"),
          "Backroll Throw",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Backroll Throw", ":summary", "* The fighter grabs the opponent and then rolls backwards while using his legs to help lift and throw the opponent over him. The opponent is send directly behind the fighter and the fighter is left [Prone].\n* Uses a [Hold]\n-1 Initiative\n+1 Damage is [Knockdown]\nCriticals are [Knockdown]"),
          "Bear Hug",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Bear Hug", ":summary", "* The fighter wraps his arms around the opponent and crushes him.\n* [Continuous]\n* Requires a [Hold]\n-1 Initiative\n+1 Damage\n1 Move"),
          "Choke Hold",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Choke Hold", ":summary", "* The fighter wraps his arms around the opponents neck and begins choking him.\n* [Continuous]\n* Requires a [Hold]\n-1 Initiative\nCriticals are [Asphixiation]\n1 Move"),
          "Fighting Hold",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Fighting Hold", ":summary", "* While holding the opponent, strike him repeatedly.\n* Requires [Hold]\n* [Continuous]\n+1 Initiative\n+1 Accuracy\n+1 Damage\n1 Move"),
          "Grappling Defense",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Grappling Defense", ":summary", "* Skilled grapplers must learn how to resist and escape from the same maneuvers that they use.\n* [Reaction]\n+1 Initiative\n-1 Move\n0 Damage - Remove a [Hold] from yourself.\nCriticals - Remove additional [Holds]."),
          "Ground Fighting",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Ground Fighting", ":summary", "* [Passive]: Ignore penalties for being [Prone]."),
          ":Headlock",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Headlock"),
          "Hip Throw",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Hip Throw", ":summary", "* This is a quick move to get an opponent on the ground. The fighter moves a leg behind the opponent's and pushes him past the hip and directly to the floor.\n-1 Move\nDamage - [Knockdown]\nCriticals - [Knockdown]"),
          ":Hold",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Hold", ":summary", "* Puts a [Hold] on opponent.\n+1 Initiative\n0 Damage - Add a [Hold] token.\n0 Criticals"),
          ":Hook",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Hook", ":summary", "* The hook is a powerful punch with knockout power.\n* When throwing a hook, the puncher shifts his body weight to the\nlead foot, allowing him to pivot his lead foot and generate\nkinetic energy through the hip/torso/shoulder, swinging his lead\nfist horizontally toward the opponent.\n-1 Initiative\n+1 Damage\n+0 Criticals - [Stun]"),
          "Iron Claw",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Iron Claw", ":summary", "Damaging Grab"),
          "Joint Lock",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Joint Lock", ":summary", "* The fighter grabs a limb tightly and leverages the limb in ways the joint was not meant to turn. The attack is incredibly painful and can cause sprains, dislocations, and breaks.\n* [Continuous Hold]\n-2 Initiative\n-1 Accuracy\n+0 Damage - +1 Stun\n+0 Criticals - [Cripples]", ":titles", "Armbar, Armlock, Hammerlock, Leg Lock"),
          "Knee Bash",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Knee Bash", ":summary", "* While holding the opponent, knee him repeatedly in the head or stomach.\n* Requires [Hold]\n* [Continuous]\n-1 Initiative\n+1 Accuracy\n+2 Damage\n0 Move"),
          "Neck Break",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Neck Break", ":summary", "* The fighter grabs the opponent's head and twists it with the intention to break the neck. For best effect this is used as a surprise attack.\n-2 Initiative\n-2 Accuracy\n+4 Damage\nCriticals are [Cripples]"),
          ":Nelson",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Nelson"),
          ":Piledriver",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Piledriver"),
          ":Pin",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Pin", ":summary", "* While grappling, attempt to immobilize the opponent.\n* Requires [Grapple]\n* [Continuous]\n+1 Damage - Damage is [Stun].\nCriticals are [Slow]"),
          ":Reversal",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Reversal"),
          "Shoulder Throw",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Shoulder Throw", ":summary", "* The fighter lifts the opponent his is holding over a shoulder and hurls him as far as his strength will allow.\n* Requires a [Hold].\n-1 Move\n+1 Damage - [Knockback] in any direction the fighter chooses.\nCriticals - [Knockback]"),
          "Sleeper Hold",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Sleeper Hold"),
          ":Suplex",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Suplex"),
          ":Tackle",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Tackle", ":summary", "* Dive at the opponent and use weight and momentum to take you both to the ground.\n+1 Initiative\n+1 Move\n+1 Accuracy. Succeed or fail, the fighter is [Prone].\nDamage is [Knockdown].\nCriticals are [Knockdown]", ":titles", "Flying Tackle"),
          "Take Down",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Take Down", ":summary", "* Fighter wraps his limbs around the opponent and causes both fighters to fall [Prone].\n+1 Initiative\n-1 Move\n0 Damage - Both fighters are [Prone] and puts a [Hold] on the other.\n0 Criticals"),
          "Thigh Press",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Thigh Press")
        ),
        ":specialtymap",
        nx_tactics_base.f_specialtymap_from_tactics_keys(tactics, "Binding", "Brawling", "Grappling", "Kicks", "Knives", "Strikes", "Wrestling", "Aikido", "Boxing", "Capoeira", "Commando Training", "Hapkido", "Hsing-I", "Hwarang-Do", "Jeet Kune Do", "Jujutsu", "Kabaddi", "Kalaripayattu", "Karate", "Kickboxing", "Kobujutsu", "Krabi-Krabong", "Kung Fu, Crane Style", "Kung Fu, Dragon Style", "Kung Fu, Leopard Style", "Kung Fu, Mantis Style", "Kung Fu, Monkey Style", "Kung Fu, Snake Style", "Kung Fu, Tiger Style", "Kung Fu, Wing Chun", "Muay Thai", "Ninjutsu", "Pakua", "Pentjak-Silat", "Savate", "Sumo", "Tae Kwon Do", "Tai Ch'i Ch'uan", "Wu Shu")
      ),
      vx_core.f_new(
        {"any-1": nx_tactics_base.t_skill},
        ":name",
        "Communications",
        ":abilitymap",
        vx_core.f_new(
          {"any-1": nx_tactics_base.t_abilitymap},
          ":Appearance",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Appearance", ":summary", "* Expert on personal grooming, cosmetics, and hairstyling."),
          ":Carousing",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Carousing"),
          "Detect Lie",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Detect Lie"),
          ":Drinking",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Drinking"),
          ":Drugs",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Drugs"),
          ":Etiquette",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Etiquette"),
          ":Fashion",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Fashion", ":summary", "* Knows current fashions and what clothing with make the best impact."),
          ":Fiction",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Fiction", ":summary", "* Can author, critique, interpret, and detect fiction."),
          "Go Viral",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Go Viral", ":summary", "* Create an interesting message popular enough to be passed around."),
          ":Gossip",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Gossip", ":summary", "* The single best way to get information, but, given it source, may not be reliable."),
          ":Interview",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Interview", ":titles", "Interviewer, Reporter"),
          ":Journalism",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Journalism", ":titles", "Journalist, Media, Reporter"),
          ":Literacy",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Literacy", ":summary", "* Can read and write\n* This ability is assumed in modern characters from 1st and 2nd world nations"),
          "Motivational Speaking",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Motivational Speaking", ":reference", "* DO it! Just DO it! - Shia Labeouf\n* My name is Matt Foley and I am a motivational speaker... First off, I am thirty-five years old, I am divorced, and I live in a van down by the river... Well I'm here to tell you, that you're probably going to find out, as you go out there, that you're not going to amount to jack squat! You're going to end up eating a steady diet of government cheese and living in a van down by the river! - Matt Foley, SNL", ":titles", "Motivational Speaker"),
          ":Negotiation",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Negotiation", ":titles", "Advisor, Arbiter, Diplomat, Emissary, Envoy, Legate, Negotiator", ":reference", "I'm not greedy, my friends though. - Yordle Grifter, Runeterra"),
          ":Photography",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Photography", ":titles", "Photographer"),
          ":Poetry",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Poetry", ":summary", "Can author any type of poetry", ":titles", "Poet"),
          ":Politics",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Politics"),
          ":Recruiting",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Recruiting", ":titles", "Casting Director, Hiring Manager, Recruiter"),
          ":Scribe",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Scribe", ":summary", "* Can copy writings exactly"),
          ":Sincerity",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Sincerity", ":summary", "* Helps convince others when you are being truthful.\n* Helps improve long term relationships by increasing trust.\n* Limitation - May only be used when you truly believe that your are correct."),
          "Small Talk",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Small Talk", ":titles", "The Gift of Gab"),
          ":Streetwise",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Streetwise", ":summary", "* [Action]: Gain knowledge where a good or service can be found in a city including black market goods or services."),
          ":Translator",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Translator", ":summary", "* Can translate immediately"),
          "Trash Talk",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Trash Talk", ":reference", "* What's the matter Agent Scary Lips? You're Scary Lips tasting my hairy shit? You tasting Doug Wilson's World Famous beef stew? How's it going down, its kinda spicy right? You guys are so fucked right now, all I can think about is your wife and a horse. - Doug Wilson, Weeds", ":titles", "Put Down"),
          ":Videography",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Videography", ":titles", "Cameraman, Videographer"),
          "Video Production",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Video Production", ":titles", "Director, Producer"),
          "Wise Words",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Wise Words", ":summary", "* Apply personal life experiences to help others understand themselves."),
          ":Cantonese",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Cantonese"),
          "Elvish",
          nx_tactics_base.f_ability_from_tactics_key(tactics, "Elvish"),
          "English",
          nx_tactics_base.f_ability_from_tactics_key(tactics, "English"),
          ":French",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "French"),
          ":German",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "German"),
          ":Greek",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Greek"),
          ":Italian",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Italian"),
          ":Latin",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Latin"),
          ":Mandarin",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Mandarin"),
          "Olde English",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Olde English"),
          ":Portuguese",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Portuguese"),
          ":Russian",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Russian"),
          "Sign Language",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Sign Language"),
          ":Spanish",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Spanish")
        ),
        ":specialtymap",
        nx_tactics_base.f_specialtymap_from_tactics_keys(tactics, "Linguistics", "Writing")
      ),
      vx_core.f_new(
        {"any-1": nx_tactics_base.t_skill},
        ":name",
        "Defense",
        ":titles",
        "Armorer, Defender, Shield Bearer, Shield Warden, Warder",
        ":stat",
        "Body",
        ":abilitymap",
        vx_core.f_new(
          {"any-1": nx_tactics_base.t_abilitymap},
          ":Armorsmithing",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Armorsmithing", ":summary", "* The ability to repair, improve, or even create armor."),
          ":Counterattack",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Counterattack"),
          "High Block",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "High Block", ":summary", "-1 Speed\n+4 Defense vs. [High Attack]\n+1 Defense vs. other attacks"),
          "Low Block",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Low Block", ":summary", "-1 Speed\n+4 Defense vs. [Low Attack]\n+1 Defense vs. other attacks"),
          "Powered Armor",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Powered Armor"),
          "Shield Bash",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Shield Bash"),
          "Shield Block",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Shield Block", ":summary", "* [Defend] [Damage]: Add Shield [Armor] to your [Armor]."),
          "Shield Charge",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Shield Charge"),
          "Shield Guard",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Shield Guard", ":summary", "* [Reaction] [Damage]: Before adjacent unit takes damage, discard a [Club] to add your Shield [Armor]."),
          "Shield Sacrifice",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Shield Sacrifice", ":summary", "* [Club] [Defend] [Damage]: The shield becomes the target of any [Overwhelm] damage.")
        ),
        ":specialtymap",
        nx_tactics_base.f_specialtymap_from_tactics_keys(tactics, "Medium Armor", "Heavy Armor", "Shields")
      ),
      vx_core.f_new(
        {"any-1": nx_tactics_base.t_skill},
        ":name",
        "Evasion",
        ":summary",
        "* Evasion is a special defense typically used by those that choose to wear light or no Armor.",
        ":stat",
        "Defense",
        ":abilitymap",
        nx_tactics_base.f_abilitymap_from_tactics_keys(tactics, "Blade Locking", "Body Climb", "Deflect", "Dirty Fighting", "Disarm", "Disengage", "Dive for Cover", "Dodge", "Dodge Roll", "Drunken Monkey Roll", "Iron Horse", "Iron Skin", "Sidestep"),
        ":specialtymap",
        nx_tactics_base.f_specialtymap_from_tactics_keys(tactics, "Bucklers", "Light Armor")
      ),
      vx_core.f_new(
        {"any-1": nx_tactics_base.t_skill},
        ":name",
        "Demolitions",
        ":titles",
        "Bomb Disposal, Bomb Squad, Bombardier, Bomber, Combat Engineers",
        ":summary",
        "* Experienced with setting up large explosives to destroy large structures.",
        ":abilitymap",
        nx_tactics_base.f_abilitymap_from_tactics_keys(tactics, "Bomb Disposal")
      ),
      vx_core.f_new(
        {"any-1": nx_tactics_base.t_skill},
        ":name",
        "Firearms",
        ":titles",
        "Crackshot, Marksman, Rifleman, Sharpshooter, Sniper",
        ":reference",
        "* Captain's orders: Bullet to the face. - Crackshot Corsair, Runeterra\n* Smile! It's called gunPLAY. - Jinx, Runeterra",
        ":summary",
        "* Skill in using guns of various types (not including crossbows). IF you shoot in a non-standard way, you have [Disadvantage].",
        ":abilitymap",
        vx_core.f_new(
          {"any-1": nx_tactics_base.t_abilitymap},
          ":Anti-Personnel",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Anti-Personnel", ":summary", "* [Action]: [+1 Damage] or [-1 Damage] vs. 2 or more Armor", ":titles", "Hollow Point"),
          "Armor Piercing",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Armor Piercing", ":summary", "* [Action]: Enemy at [-2 Armor]", ":titles", "Depleted Uraniumn"),
          ":Autofire",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Autofire", ":summary", "* [Requires]: Weapon with [Autofire]\n-1 [Attack]\n* [Action]: Target 2 adjacent units."),
          "Chemical Rounds",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Chemical Rounds", ":summary", "* [Action]: [-1 Damage], [Critical Hits] are [Acid]"),
          "Quick Draw",
          nx_tactics_base.f_ability_from_tactics_key(tactics, "Quick Draw"),
          "Gyrojet Rounds",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Gyrojet Rounds", ":summary", "* [Action]: [+1 Damage] at Long Range, [-1 Damage] at Short Range", ":titles", "Rocket Rounds"),
          "High Explosive Rounds",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "High Explosive Rounds", ":summary", "* [Action]: Use [Blast] rules for targetting and damage.", ":titles", "Explosive Rounds"),
          "Hip Shoot",
          nx_tactics_base.f_ability_from_tactics_key(tactics, "Hip Shoot"),
          "Non-Lethal Rounds",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Non-Lethal Rounds", ":summary", "* [Action]: [-2 Damage] vs. 2 or more Armor.  Half of all [Damage] is [Stun] instead.", ":titles", "Rubber Bullets"),
          "Paint Rounds",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Paint Rounds", ":summary", "* [Action]: [0 Damage], [Critical Hits] are [Stun]", ":titles", "Paintball"),
          "Pin Down",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Pin Down"),
          "Rapid Fire",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Rapid Fire"),
          ":Scattershot",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Scattershot", ":summary", "* Choose a target starting from the closest.\n* If a hit is scored, roll another attack on the same target.\n* If no hit scored, roll against next target.\n* -1 for each Space of Range (Cone), -1 per roll (cumulative, inclusive).\n* Criticals can be used for additional damage rolls (multiple Hits)\n* If target was [Armor], that Armor is at +2 vs this attack", ":titles", "Glaser, Shot"),
          ":Sniper",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Sniper", ":reference", "* The snipe (a family of shorebirds) is difficult to catch for experienced hunters, so much so that the word 'sniper' is derived from it to refer to anyone skilled enough to shoot one.\n* I aim to win and my aim... is Excellent. - Caitlyn, Runeterra", ":summary", "* [Requires]: Long Range Weapon\n* Increase weapon range by 50% and choose [Hit Location]"),
          "Supressive Fire",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Supressive Fire", ":summary", "* Firing weapons at enemy forces with the primary goal of forcing them to remain under cover.\n* [Requires]: Weapon with [Autofire]\n* [Action]: Target a unit that has not been activated this turn, all [Hits] and [Critical Hits] are [Stun] tokens.\n+1 Attack", ":titles", "Covering Fire"),
          "Tracer Rounds",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Tracer Rounds", ":summary", "* [Requires]: [Auto], Must attack same target on subsequent round.\n* [Action]: [+1 Attack], [-1 Damage]."),
          "Tracking Rounds",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Tracking Rounds"),
          ":Auto",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Auto", ":summary", "+1 Cost\n* Criticals can be used for additional damage rolls (multiple hits)."),
          ":Blast",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Blast"),
          ":Bombardment",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Bombardment"),
          ":Capacitors",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Capacitors", ":summary", "* Uses capacitors that can recharge 1 shot a turn from a power source rated at the same power level as a single shot.  Cannot be used with lower energy power sources."),
          ":Electroshock",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Electroshock", ":titles", "Taser"),
          "Extra Ammo",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Extra Ammo", ":summary", "* 2x number of shots, each time this modifier is taken."),
          "Flash Surpressor",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Flash Surpressor", ":summary", "* Reduces the muzzle flare of the weapon making it more difficult to visually locate the shooter."),
          "Gun Mount",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Gun Mount", ":titles", "Bipod, Tripod"),
          ":Overcharge",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Overcharge", ":summary", "* [Action]: Consume 2 shots to to 1 extra damage. Then Damage is -1 until repaired."),
          "Overload Weapon",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Overload Weapon", ":summary", "* Detonate the entire weapon magazine (and the weapon) as an explosive with force equal to the total power in the magazine."),
          ":Rechargable",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Rechargable", ":summary", "* Uses batteries that can be slowly recharged from any power source."),
          "Recoil Compensator",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Recoil Compensator", ":summary", "* Reduces the 'kick' of the weapon and therefore reduces the penalty for continuous fire."),
          ":Silencer",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Silencer"),
          "Smoke Generator",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Smoke Generator"),
          "Targeting Laser",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Targeting Laser"),
          "Telescopic Sight",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Telescopic Sight", ":summary", "Reduces penalties for Medium Range to Short Range and Long Range to Medium Range"),
          ":Turret",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Turret", ":image", "Tokens/Arrow.png", ":summary", "+1 Cost\n* Turret mounted weapons may turn their turret toward any direction and fire from the side the turret is facing.\n* Turrets are normally assumed to be facing forward.  At the beginning of its [Action], a unit may change the turret facing by 1 side (Use a [Vector] Token) indicate where the Turret is pointing.")
        ),
        ":specialtymap",
        nx_tactics_base.f_specialtymap_from_tactics_keys(tactics, "Energy Weapons", "Handguns", "Rifles", "Shotguns")
      ),
      vx_core.f_new(
        {"any-1": nx_tactics_base.t_skill},
        ":name",
        "Gunnery",
        ":summary",
        "* Gunnery skill cannot exceed level 5 - Because advanced weapons are mostly point and shoot, weapon skill has less to do with the gunner and more to do with the weapon and its control system. Further, advanced weapons technologies come in a multitude of variations with constantly changing interfaces therefore it is very difficult to dedicate oneself to a single system to become an expert.\n* See Arms and Armor for weapons",
        ":reference",
        "* It isn't exactly legal, but it is exactly AWESOME! - Funsmith, Runeterra",
        ":titles",
        "Artillerist, Field Ops, Gunner",
        ":abilitymap",
        nx_tactics_base.f_abilitymap_from_tactics_keys(tactics, "Air Burst", "Barrage", "Forward Observer", "Indirect Fire", "Point Defense", "Salvo"),
        ":specialtymap",
        nx_tactics_base.f_specialtymap_from_tactics_keys(tactics, "Cannons", "Flamethrowers", "Machineguns")
      ),
      vx_core.f_new(
        {"any-1": nx_tactics_base.t_skill},
        ":name",
        "Hunting",
        ":reference",
        "* Royal Huntsman - Sleeping Beauty",
        ":titles",
        "Forward Observer, Gamekeeper, Hunter, Huntress, Huntsman, Huntmaster, Lookout, Mage Hunter, Master Huntsman, Master of the Hunt, Poacher, Ranger, Royal Huntsman, Scout, Sentinel, Stalker, Tracer, Tracker, Watchman",
        ":abilitymap",
        nx_tactics_base.f_abilitymap_from_tactics_keys(tactics, "Bug Hunt", "Call of the Hunt", "Cull the Herd", "Deadfall", "Field Dressing", "Fishing", "Hunter's Mark", "Lure", "Scouting", "Snare", "Tag and Bag", "There is No Escape", "Track"),
        ":specialtymap",
        nx_tactics_base.f_specialtymap_from_tactics_keys(tactics, "Alien Hunter", "Bounty Hunter", "Demon Hunter", "Devil Hunter", "Ghost Hunter", "Mage Hunter", "Monster Hunter", "Trapper", "Treasure Hunter", "Vampire Hunter", "Werewolf Hunter", "Witch Hunter")
      ),
      vx_core.f_new(
        {"any-1": nx_tactics_base.t_skill},
        ":name",
        "Melee",
        ":reference",
        "* Mizu: I must become the greatest swordsman alive. Swordfather: Is that all? - Mizu and Swordfather, Blue Eye Samurai",
        ":summary",
        "* Fighting near the opponent. This includes most hand to hand weapons.\n* [Target]: Melee combat may only be used to attack the 3 space directly ahead of you or the space you are on.\n* Allows the use of all Melee weapons, but unfamiliar weapons follow the [Unfamiliar Item] rule.\n* See Arms and Armor for weapons",
        ":titles",
        "Battlemaster, Champion, Congueror, Fencer, Fighter, Master of Arms, Warrior",
        ":stat",
        "Body",
        ":abilitymap",
        nx_tactics_base.f_abilitymap_from_tactics_keys(tactics, "Abdomen Timing of Two", "Anvil Strike", "Backlash", "Blade Barrier", "Blind Fighting", "Combat Sense", "Continuous Cut", "Dash Attack", "Dazing Blow", "Dual Wield", "Feint", "Fend Off", "Fire and Stones Cut", "Fleche", "Follow Through", "Hamstring", "Impale", "Lunge", "Offhanded Fighting", "Parry", "Piercing Strike", "Rapid Strike", "Riposte", "Set Against Charge", "Space Clearing", "Stunning Blow", "Sweep", "There are Many Enemies", "Thrust", "To Apply Stickiness", "Weapon Block", "Whirlwind Attack"),
        ":specialtymap",
        nx_tactics_base.f_specialtymap_from_tactics_keys(tactics, "Bladedancer", "Fensing", "Sword Saint", "Axes", "Flexible Weaponry", "Hammers", "Short Blades", "Polearms", "Spears", "Staves", "Swords")
      ),
      vx_core.f_new(
        {"any-1": nx_tactics_base.t_skill},
        ":name",
        "Leadership",
        ":reference",
        "* Generals are in the business of getting people killed. Captains like to keep theirs alive. You wanna put on a parade? Go find a general. You wanna fight your way home? Talk to me. - Obregon Kaine, Negation Comic\n* Well hello mister fancy pants. I got news for you pal. You ain't leading but two things right now: Jack and Shit and Jack left town. - Ash, Army of Darkness\n* And when Alexander saw the breadth of his domain, he wept for there were no more worlds to conquer. - Hans Gruber, Die Hard",
        ":titles",
        "Captain, Castellan, Commander, Drillmaster, Drill Sergeant, Major, Overlord, Sergeant, Warchief, Warlord",
        ":stat",
        "Mind",
        ":abilitymap",
        nx_tactics_base.f_abilitymap_from_tactics_keys(tactics, "Call to Arms", "Chain of Command", "Pep Talk", "Rally")
      ),
      vx_core.f_new(
        {"any-1": nx_tactics_base.t_skill},
        ":name",
        "Military",
        ":reference",
        "* He can't make that kind of decision. He's just a grunt! No offense. None taken - Burke and Hicks, Aliens\n* I think we'd better split up...Yeah... we can do more damage that way. - Ghostbusters\n* If ten times the enemy's strength, surround them; If five times, attack them; If double, divide them; If equal, be able to fight them; If fewer, be able to evade them; If weaker, be able to avoid them. - Sun Tzu\n* Warfare is the art of deception. Thus although you are capable, display incapability to them. When your objective is nearby, make it appear distant; when it is far away, create the illusion of being nearby. - Sun Tzu, The Art of War",
        ":titles",
        "Admiral, Brigade, Brigadier, Cadet, Centurion, Colonel, Commander, Commando, Conscript, Corporal, Field Marshal, Footman, Gamesman, General, Grunt, High Guard, Honor Guard, Infantry, Legionnaire, Lieutenant, Praetor, Praetorian Guard, Reserves, Royal Guard, Soldier, Soldier of Fortune, Strategist, Tactician, Vanguard",
        ":stat",
        "Will",
        ":abilitymap",
        vx_core.f_new(
          {"any-1": nx_tactics_base.t_abilitymap},
          "Airborne Assault",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Airborne Assault"),
          "Amphibious Assault",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Amphibious Assault"),
          ":Besiege",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Besiege"),
          "Close Assault",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Close Assault", ":summary", "* [Action]: If a [Vehicle] is adjacent to this unit, you may target the Top Armor.  If the unit has explosives, it may target the Under Armor."),
          "Combat Driver",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Combat Driver", ":summary", "* Experienced in fighting in a car."),
          "Divide and Conquer",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Divide and Conquer"),
          "Diversionary Tactics",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Diversionary Tactics"),
          ":Explosives",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Explosives", ":summary", "* Experienced using various small explosives in combat."),
          "Field Fortifications",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Field Fortifications"),
          "Formation: Back to Back",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Formation: Back to Back", ":summary", "* [Formation]: Not strictly a formation, units with their backs against each other largely protect each other's back."),
          "Formation: Cover",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Formation: Cover", ":summary", "* [Formation]: Not strictly a formation, units in Cover formation stay close enough together to protect each other's sides."),
          "Formation: March",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Formation: March", ":summary", "* [Formation]: Units move in columns.\n* [+1 Speed]"),
          "Formation: Parade",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Formation: Parade", ":summary", "* [Formation]: A showy formation designed to look good.  Has no use in battle.\n* [+ 1 Intimidation]"),
          "Formation: Phalanx",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Formation: Phalanx", ":reference", "* With his friends jostling and pushing on both sides and behind, and his enemies forming a solid wall in front of him, the hoplite had little opportunity for feats of technique and weapon skill, but great need for commitment and mental toughness. The hoplites had to trust their neighbors for mutual protection, so a phalanx was only as strong as its weakest elements. Its effectiveness depended on how well the hoplites could maintain this formation while in combat, and how well they could stand their ground, especially when engaged against another phalanx. The more disciplined and courageous the army, the more likely it was to win. The Greek word dynamis, the 'will' or 'ability to fight,' was used to express the drive that kept hoplites in formation.", ":summary", "* [Formation]: Focuses on offense using Melee attacks with Reach.\n* [Requires]: At least half must have Weapons with Reach 2+.\n* [+1 Attack], [+1 Defense] from Front\n* [-1 Defense] from Rear"),
          "Formation: Shield Wall",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Formation: Shield Wall", ":summary", "* [Formation]: Uses shields to form a wall.\n* [Requires]: At least half must have Shields.\n+1 Defense from Front."),
          "Formation: Skirmish",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Formation: Skirmish", ":reference", "Acting as light infantry with their light arms and minimal armor, they could run ahead of the main battle line, release a volley of arrows, slingshots or javelins, and retreat behind their main battle line before the clash of the opposing main forces. The aims of skirmishing were to disrupt enemy formations by causing casualties before the main battle, and to tempt the opposing infantry into attacking prematurely, throwing their organization into disarray. Skirmishers could also be effectively used to surround opposing soldiers in the absence of friendly cavalry.", ":summary", "* [Formation]: Units move in loose shapes.\n* [Requires]: Only [Light Infantry].\n* [Move]: Ignore 1 [Terrain Penalty].\n* [+1 Defense] vs Ranged or Large Units\n* [+1 Defense] when in Terrain with Defense bonus\n* [-1 Defense] vs Small Melee and Close Combat Units", ":titles", "Skirmisher"),
          "Formation: Testudo",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Formation: Testudo", ":image", "Skills/Testudo.jpg", ":summary", "* [Formation]: Uses shields to form a shell around a unit.\n* [Requires]: At least half must have Shields.\n* [+2 Defense] vs Ranged\n* Shields protect all sides\n* Cannot Attack", ":titles", "Tortoise Formation, Turtle Up"),
          "Formation: Tight",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Formation: Tight", ":summary", "* [Formation]: Units stay tightly packed to maximize Melee defense.\n* [+1 Defense] vs Melee and Close Combat.\n* [-1 Defense] vs Ranged"),
          "Formation: Wedge",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Formation: Wedge", ":summary", "* [Formation]: Units move in triangle and focus on breaking enemy formations.\n* [+1 Retreat] Token if unit inflicts at least 1 [Retreat]."),
          ":Fortifications",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Fortifications"),
          "Halo Drop",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Halo Drop"),
          "Jump Suit Combat",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Jump Suit Combat"),
          "Military Vehicle",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Military Vehicle", ":summary", "* Every vehicle unit is assumed to have this ability. Units that are not vehicles must take this ability for each vehicle."),
          "Mine Clearing",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Mine Clearing"),
          "Mine Laying",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Mine Laying"),
          "Mobile Infantry",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Mobile Infantry", ":summary", "* Experienced with powered armor."),
          "Orbital Halo Drop",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Orbital Halo Drop"),
          "Parachute Assault",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Parachute Assault"),
          ":Sapping",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Sapping", ":reference", "* If it was important, then they should have built it better. - Desert Naturalist, Runeterra"),
          "Space Combat",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Space Combat"),
          "Urban Assault",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Urban Assault"),
          "Wingsuit Combat",
          vx_core.f_new({"any-1": nx_tactics_base.t_ability}, ":name", "Wingsuit Combat")
        ),
        ":specialtymap",
        nx_tactics_base.f_specialtymap_from_tactics_keys(tactics, "Siegecraft")
      ),
      vx_core.f_new(
        {"any-1": nx_tactics_base.t_skill},
        ":name",
        "Ranged",
        ":reference",
        "* Good. Bad. I'm the guy with the gun. - Ash, Army of Darkness",
        ":titles",
        "Archer, Javelineer, Slinger",
        ":abilitymap",
        nx_tactics_base.f_abilitymap_from_tactics_keys(tactics, "Arcing Fire", "Barbed Javelin", "Bowel Raker", "Deadly Shot", "Double Shot", "Explosive Shot", "Flaming Shot", "Fletching", "Knife Throwing", "Piercing Shot", "Richochet", "Shield Snare", "Signal Shot", "Stunning Throw"),
        ":specialtymap",
        nx_tactics_base.f_specialtymap_from_tactics_keys(tactics, "Archery", "Thrown Weapons")
      ),
      vx_core.f_new(
        {"any-1": nx_tactics_base.t_skill},
        ":name",
        "Stealth",
        ":titles",
        "Stalker",
        ":stat",
        "Body",
        ":summary",
        "* This skill includes abilities that let you hide, move silently, and suprise your opponents.",
        ":abilitymap",
        nx_tactics_base.f_abilitymap_from_tactics_keys(tactics, "Ambush", "Backstab", "Blend into the Crowd", "Camouflage", "Cloak and Dagger", "Hide", "Sneak", "Sneak Attack", "Stalk", "Strike and Fade", "Tailing", "Vanish", "Without a Trace")
      ),
      vx_core.f_new(
        {"any-1": nx_tactics_base.t_skill},
        ":name",
        "Tradeskills",
        ":reference",
        "* Tradesman",
        ":stat",
        "None",
        ":abilitymap",
        nx_tactics_base.f_abilitymap_from_tactics_keys(tactics, "Administration", "Agriculture", "Architecture", "Blacksmithing", "Brewing", "Carpentry", "Cleaning", "Cobbling", "Cooking", "Cooping", "Glassblowing", "House Painting", "Jewelsmithing", "Laboring", "Landscaping", "Leatherworking", "Logging", "Metalworking", "Plumbing", "Porting", "Pottery", "Servant", "Sewing", "Stagecraft", "Weaponsmith", "Woodworking")
      )
    )
    return output
  }

  /**
   * @function tactics_skillmap_from_tactics
   * Returns a tactics updated with skillmap
   * @param  {tactics} tactics
   * @return {tactics}
   */
  static t_tactics_skillmap_from_tactics = {
    vx_type: vx_core.t_type
  }
  static e_tactics_skillmap_from_tactics = {
    vx_type: nx_tactics_decks_skill.t_tactics_skillmap_from_tactics
  }

  // (func tactics-skillmap<-tactics)
  static f_tactics_skillmap_from_tactics(tactics) {
    let output = nx_tactics_base.e_tactics
    output = vx_core.f_let(
      {"any-1": nx_tactics_base.t_tactics},
      [],
      vx_core.f_new_from_type(vx_core.t_any_from_func, () => {
        const skillmap = nx_tactics_decks_skill.f_skillmap_tactics(tactics)
        return vx_core.f_copy(tactics, ":skillmap", skillmap)
      })
    )
    return output
  }



  static {
    const constmap = vx_core.vx_new_map(vx_core.t_constmap, {
      
    })
    const emptymap = vx_core.vx_new_map(vx_core.t_map, {
      "skillmap-tactics": nx_tactics_decks_skill.e_skillmap_tactics,
      "tactics-skillmap<-tactics": nx_tactics_decks_skill.e_tactics_skillmap_from_tactics
    })
    const funcmap = vx_core.vx_new_map(vx_core.t_funcmap, {
      "skillmap-tactics": nx_tactics_decks_skill.t_skillmap_tactics,
      "tactics-skillmap<-tactics": nx_tactics_decks_skill.t_tactics_skillmap_from_tactics
    })
    const typemap = vx_core.vx_new_map(vx_core.t_typemap, {
      
    })
    const pkg = vx_core.vx_new_struct(vx_core.t_package, {
      "name": "nx/tactics/decks/skill",
      "constmap": constmap,
      "emptymap": emptymap,
      "funcmap": funcmap,
      "typemap": typemap
    })
    vx_core.vx_global_package_set(pkg)

    // (func skillmap-tactics)
    nx_tactics_decks_skill.t_skillmap_tactics['vx_value'] = {
      name          : "skillmap-tactics",
      pkgname       : "nx/tactics/decks/skill",
      extends       : ":func",
      idx           : 0,
      allowfuncs    : [],
      disallowfuncs : [],
      allowtypes    : [],
      disallowtypes : [],
      allowvalues   : [],
      disallowvalues: [],
      traits        : [vx_core.t_func],
      properties    : [],
      proplast      : {},
      fn            : nx_tactics_decks_skill.f_skillmap_tactics
    }

    // (func tactics-skillmap<-tactics)
    nx_tactics_decks_skill.t_tactics_skillmap_from_tactics['vx_value'] = {
      name          : "tactics-skillmap<-tactics",
      pkgname       : "nx/tactics/decks/skill",
      extends       : ":func",
      idx           : 0,
      allowfuncs    : [],
      disallowfuncs : [],
      allowtypes    : [],
      disallowtypes : [],
      allowvalues   : [],
      disallowvalues: [],
      traits        : [vx_core.t_func],
      properties    : [],
      proplast      : {},
      fn            : nx_tactics_decks_skill.f_tactics_skillmap_from_tactics
    }

  }
}
