(package nx/tactics/uitactics
 :libs (lib base  :path nx/tactics/base)
       (lib event :path vx/event)
       (lib ui    :path vx/ui/ui)
 :doc "Tactics UI")

(const event-app-home-card-click : event/event
 (copy event/event-click
  :event<-event event-app-home-card-click<-event))

(const eventmap-app-home-card : event/eventmap
 (event/eventmap<-eventlist
  (event/eventlist
   event-app-home-card-click))
 :doc "Eventmap for app-home-card")

(const point-cardsize : ui/point
 (ui/point
  :x 64
  :y 89))

(const style-html : ui/style
 (ui/style
  :name          "html"
  :styletype     styletype-system
  :boundsmargin  (ui/bounds
                  :left   0
                  :right  0
                  :top    0
                  :bottom 0)
  :boundspadding (ui/bounds
                  :left   0
                  :right  0
                  :top    0
                  :bottom 0)
  :pin           ui/pin-expand)
 :doc "Returns the style for app ui.")

(const style-body : ui/style
 (ui/style
  :name          "body"
  :styletype     styletype-system
  :boundsmargin  (ui/bounds
                  :left   0
                  :right  0
                  :top    0
                  :bottom 0)
  :boundspadding (ui/bounds
                  :left   0
                  :right  0
                  :top    0
                  :bottom 0)
  :pin           ui/pin-expand)
 :doc "Returns the style for app ui.")

(const style-clickable : ui/style
 (ui/style
  :name             "clickable"
  :styletype        styletype-shared
  :cursor           ui/cursor-pointer
  :color-hoverbkgrd "F0C0C0")
 :doc "Returns the style for clickable class.")

(const style-app : ui/style
 (ui/style
  :color-background "B0E0E6"
  :layout           ui/layout-app
  :pin              ui/pin-expand)
 :doc "Returns the style for app ui.")

(const style-app-background : ui/style
 (ui/style
  :layout    ui/layout-background
  :pin       ui/pin-center
  :pointsize (ui/point
              :x 1000
              :y 1000))
 :doc "Returns the style for app ui.")

(const style-app-home : ui/style
 (ui/style
  :color-background "F0F0F0"
  :layout ui/layout-flow-columns
  :pin    ui/pin-expand)
 :doc "Returns the style for app ui.")

(const style-app-main : ui/style
 (ui/style
  :layout           ui/layout-main
  :pin              ui/pin-center-v
  :pointpos         (ui/point
                     :x 6
                     :y 6)
  :pointsize        (ui/point
                     :y 6))
 :doc "")

(const style-app-menubar : ui/style
 (ui/style
  :color-background "5E9CA0"
  :layout           ui/layout-menubar
  :pin              ui/pin-top
  :pointsize        (ui/point
                     :y 6))
 :doc "")

(const style-app-menudrawer : ui/style
 (ui/style
  :layout ui/layout-menudrawer)
 :doc "")

(const style-app-msgbox : ui/style
 (ui/style
  :layout ui/layout-msgbox)
 :doc "")

(const style-app-navbar : ui/style
 (ui/style
  :color-background "90C5A9"
  :layout           ui/layout-navbar
  :pin              ui/pin-left
  :pointpos         (ui/point
                     :y 6)
  :pointsize        (ui/point
                     :x 6
                     :y 6))
 :doc "")

(const style-app-navdrawer : ui/style
 (ui/style
  :layout ui/layout-navdrawer)
 :doc "")

(const style-app-parallax : ui/style
 (ui/style
  :layout ui/layout-parallax)
 :doc "")

(const style-app-statusbar : ui/style
 (ui/style
  :color-background "B6B6B6"
  :layout           ui/layout-statusbar
  :pin              ui/pin-bottom
  :pointsize        (ui/point
                     :y 6))
 :doc "")

(const style-app-statusdrawer : ui/style
 (ui/style
  :layout ui/layout-statusdrawer)
 :doc "")

(const style-card : ui/style
 (ui/style
  :name "style-card"
  :color-background "FFFFFF"
  :layout           ui/layout-panel
  :pointsize        point-cardsize
  :type             ui/styletype-shared)
 :doc "")

(const stylesheet-app : ui/stylesheet
 (ui/stylesheet
  :stylemap (ui/stylemap<-stylelist
             (ui/stylelist
              style-html
              style-body
              style-clickable
              style-card)))
 :doc "")

(func ui-app : ui/ui
 (let : ui/ui
  [background   : ui/ui    := (ui-app-background)
   main         : ui/ui    := (ui-app-main)
   menubar      : ui/ui    := (ui-app-menubar)
   menudrawer   : ui/ui    := (ui-app-menudrawer)
   msgbox       : ui/ui    := (ui-app-msgbox)
   navbar       : ui/ui    := (ui-app-navbar)
   navdrawer    : ui/ui    := (ui-app-navdrawer)
   parallax     : ui/ui    := (ui-app-parallax)
   statusbar    : ui/ui    := (ui-app-statusbar)
   statusdrawer : ui/ui    := (ui-app-statusdrawer)
   uimap        : ui/uimap := (ui/uimap
                               :background   background
                               :main         main
                               :menubar      menubar
                               :menudrawer   menudrawer
                               :msgbox       msgbox
                               :navbar       navbar
                               :navdrawer    navdrawer
                               :parallax     parallax
                               :statusbar    statusbar
                               :statusdrawer statusdrawer)]
  (ui/ui
   :uid   "app"
   :style style-app
   :uimap uimap))
 :doc "Returns the template for the app ui.")

(func ui-app<-tactics : ui/ui
 [tactics : base/tactics]
 (let : ui/ui
  [appui : ui/ui := (ui-app)]
  (copy appui
   :data tactics))
 :doc "")

(func ui-app-background : ui/ui
 (ui/ui
  :uid "background"
  :style style-app-background))

(func ui-app-home : ui/ui
 (ui/ui
  :style style-app-home
  :uimap (ui/uimap<-uilist
          (ui/uilist
           (ui-app-home-books)
           (ui-app-home-skills)
           (ui-app-home-powers)))
  :uid "home")
 :doc "App Home Panel")

(func ui-app-home-books : ui/ui
 (ui/ui
  :uid "apphomebooks"
  :eventmap eventmap-app-home-card
  :stylelist (ui/stylelist
              style-card
              style-clickable)
  :uimap
   (ui/uimap<-uilist
    (ui/uilist
     (ui/ui
      :uid   "bookstitle"
      :style (ui/style
              :layout ui/layout-label)
      :data  "Books"))))
 :doc "")

(func ui-app-home-skills : ui/ui
 (ui/ui
  :uid "apphomeskills"
  :eventmap eventmap-app-home-card
  :stylelist (ui/stylelist
              style-card
              style-clickable)
  :uimap
   (ui/uimap<-uilist
    (ui/uilist
     (ui/ui
      :uid   "skillsstitle"
      :style (ui/style
              :layout ui/layout-label)
      :data  "Skills"))))
 :doc "")

(func ui-app-home-powers : ui/ui
 (ui/ui
  :uid "apphomepowers"
  :eventmap eventmap-app-home-card
  :stylelist (ui/stylelist
              style-card
              style-clickable)
  :uimap
   (ui/uimap<-uilist
    (ui/uilist
     (ui/ui
      :uid   "powersstitle"
      :style (ui/style
              :layout ui/layout-label)
      :data  "Powers"))))
 :doc "")

(func ui-app-main : ui/ui
 (ui/ui
  :uid "main"
  :style style-app-main
  :uimap
   (ui/uimap
    :home
     (ui-app-home)))
 :doc "")

(func ui-app-menubar : ui/ui
 (ui/ui
  :uid   "menubar"
  :style style-app-menubar)
 :doc "")

(func ui-app-menudrawer : ui/ui
 (ui/ui
  :uid "menudrawer"
  :style style-app-menudrawer))

(func ui-app-msgbox : ui/ui
 (ui/ui
  :uid "msgbox"
  :style style-app-msgbox))

(func ui-app-navbar : ui/ui
 (ui/ui
  :uid "navbar"
  :style style-app-navbar))

(func ui-app-navdrawer : ui/ui
 (ui/ui
  :uid "navdrawer"
  :style style-app-navdrawer))

(func ui-app-parallax : ui/ui
 (ui/ui
  :uid "parallax"
  :style style-app-parallax))

(func ui-app-statusbar : ui/ui
 (ui/ui
  :uid   "statusbar"
  :style style-app-statusbar))

(func ui-app-statusdrawer : ui/ui
 (ui/ui
  :uid "statusdrawer"
  :style style-app-statusdrawer))

(func event-app-home-card-click<-event : event/event
 [event : event/event]
 event
 :doc "Event handler for card clicks")

(func ui-unit : ui
 :doc "Returns the template for a unit ui.")

(func ui-unit-background : ui/ui)

(func ui-unit-header : ui/ui)

(func ui-unit-flavor : ui/ui)

(func ui-unit-skillpower : ui/ui)

(func ui-unit-stat : ui/ui)

(func ui-unit-style : ui/style
 :doc "Returns the style for unit ui.")
