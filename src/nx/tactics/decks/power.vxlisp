(package nx/tactics/decks/power
 :libs (lib base :path nx/tactics/base)
 :doc "Powers")

(func powermap-tactics : base/powermap
 [tactics : base/tactics]
 (base/powermap<-powerlist
  (base/power
   :name "Armored"
   :summary
    "* Armor normally alters appearance and may be a permanent alteration or a suit that may be donned.
     * [+1 Value] for Armor that can appear on demand.
     * [+2 Value] for Armor that cannot be detected.
     Body Armor may be permanent or temporary.  If permanent, no time is needed to activate it, but is must either be donned and carried or it permanently alters appearance."
   :abilitymap
    (base/abilitymap<-tactics-keys
     tactics
     "Auto Med System"
     "Ablative Armor"
     "Body Flares"
     "Cold Resistant"
     "Corrosion Resistant"
     "Cryo Sleep System"
     "Electrical Resistant"
     "Energy Resistant"
     "Environmental Containment"
     "Environmental Independence"
     "Fire Resistant"
     "Floation Device"
     "Grappling Hoist"
     "Infrared Dampener"
     "Magnetic Resistant"
     "Missile Mount"
     "Pierce Resistant"
     "Plasma Resistant"
     "Pressure Resistant"
     "Radar Dampener"
     "Radar Jammer"
     "Radiation Resistant"
     "Reactive Armor"
     "Turret Mount"
     "Ultraviolet Jammer"
     "Underwater Operation"))
  (base/power
   :name "Toxins"
   :reference
    "* Say 'ah'. Some poisons can kill people in the thousands with that amount. Like botulinum toxin. It inhibits acetylcholine release, causing loss of muscle tone, lethary, .. dizziness .., visual impairment.., heavy eyelids, intense thirst, loss of speech, vomiting, diarrhea, stomach distention, breathing difficulty.. then.. respiratory failure. - A.K.I, Street Fighter 6"
   :titles "Poisonous, Venomous"
   :abilitymap
    (base/abilitymap<-tactics-keys
     tactics
     "Blinding Spit"
     "Blinding Toxin"
     "Irritating Toxin"
     "Paralyzing Bite"
     "Paralyzing Spit"
     "Paralyzing Spray"
     "Paralyzing Sting"
     "Poison Bite"
     "Poison Blood"
     "Poison Spit"
     "Poison Spray"
     "Poison Sting"
     "Poison Touch"
     "Poisonous Flesh"
     "Poisonous Skin"))
 )
 :doc "Returns the base powermap")

(func tactics-powermap<-tactics : base/tactics
 [tactics : base/tactics]
 (let : base/tactics
  [powermap : base/powermap :=
   (powermap-tactics tactics)]
  (copy tactics
   :powermap powermap))
 :doc "Returns a tactics updated with powermap")
