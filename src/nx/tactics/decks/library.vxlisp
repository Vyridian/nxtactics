(package nx/tactics/decks/library
 :libs (lib base :path nx/tactics/base)
 :doc  "Library Deck")

(const bleeding : base/cardback
 (base/cardback
  :id "bleeding"
  :name "Bleeding"
  :image "images/card-bleeding.svg"
  :summary
   "* Turn End: [Fatigue]:1 for each [Bleeding]. IF [Body]:0 THEN [Blood Loss]:1 instead."))

(const bloodloss : base/card
 (base/card
  :id "bloodloss"
  :name "Blood Loss"
  :image "images/card-bloodloss.svg"
  :summary
   "* Day End: Discard one [Blood Loss]"))

(const poisoned : base/card
 (base/card
  :id "poisoned"
  :name "Poisoned"
  :image "images/card-poisoned.svg")
)

(func deck-library : base/deck
 [tactics : base/tactics]
 (base/deck
  :name "Library Deck"
  :image "images/deck-library.svg"
  :layout base/cardlayout-imageonly
  :cardmap
   (base/cardmap
    (base/cardlist
     (base/rulelist<-tactics-keys
      tactics
      "Roles"
      "Role: Attacker"
      "Role: Blaster"
      "Role: Defender"
      "Role: Disrupter"
      "Role: Skirmisher"
      "Role: Sniper"
      "Role: Supporter"
      "Role: Taunter"))
    (base/cardlist-copy<-tactics-rulekey-count-isnum
     tactics "Skill Point" 5 true)
    (base/cardlist-copy<-tactics-rulekey-count-isnum
     tactics "Ability Point" 5 true)
    (base/cardmap-copy<-card-count-isnum
     bleeding 10 true)
    (base/cardmap-copy<-card-count-isnum
     bloodloss 10 true)
    (base/cardmap-copy<-card-count-isnum
     poisoned 10 true)
    ))
 :doc "Library Deck")
