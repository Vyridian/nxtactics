(package nx/tactics/decks/data
 :libs (lib coll             :path vx/collection)
       (lib base             :path nx/tactics/base)
       (lib ability          :path nx/tactics/decks/ability)
       (lib item             :path nx/tactics/decks/item)
       (lib place            :path nx/tactics/decks/place)
       (lib power            :path nx/tactics/decks/power)
       (lib scene         :path nx/tactics/decks/scene)
       (lib specialty        :path nx/tactics/decks/specialty)
       (lib skill            :path nx/tactics/decks/skill)
       (lib unit             :path nx/tactics/decks/unit)
       (lib advanced_rules   :path nx/tactics/books/advanced_rules)
       (lib age_of_sail      :path nx/tactics/books/age_of_sail)
       (lib age_of_steam     :path nx/tactics/books/age_of_steam)
       (lib bestiary         :path nx/tactics/books/bestiary)
       (lib characters       :path nx/tactics/books/characters)
       (lib combat           :path nx/tactics/books/combat)
       (lib core_rules       :path nx/tactics/books/core_rules)
       (lib fantasy          :path nx/tactics/books/fantasy)
       (lib gear             :path nx/tactics/books/gear)
       (lib giant_monsters   :path nx/tactics/books/giant_monsters)
       (lib high_technology  :path nx/tactics/books/high_technology)
       (lib horror           :path nx/tactics/books/horror)
       (lib land_sea_and_air :path nx/tactics/books/land_sea_and_air)
       (lib magic            :path nx/tactics/books/magic)
       (lib medieval         :path nx/tactics/books/medieval)
       (lib modern           :path nx/tactics/books/modern)
       (lib modern_fantasy   :path nx/tactics/books/modern_fantasy)
       (lib powers           :path nx/tactics/books/powers)
       (lib prehistory       :path nx/tactics/books/prehistory)
       (lib pulp_fiction     :path nx/tactics/books/pulp_fiction)
       (lib science_fiction  :path nx/tactics/books/science_fiction)
       (lib skills           :path nx/tactics/books/skills)
       (lib space_and_time   :path nx/tactics/books/space_and_time)
       (lib superheroes      :path nx/tactics/books/superheroes)
       (lib world_wars       :path nx/tactics/books/world_wars))

(const tactics-all : base/tactics
 (tactics-main)
 :doc "All tactics cards")

(func booklist-all<-tactics : base/booklist
 [tactics : base/tactics]
 (base/booklist
  (core_rules/tacticsbook tactics)
  (combat/tacticsbook tactics)
  (skills/tacticsbook tactics)
  (magic/tacticsbook tactics)
  (powers/tacticsbook tactics)
  (gear/tacticsbook tactics)
  (advanced_rules/tacticsbook tactics)
  (characters/tacticsbook tactics)
  (bestiary/tacticsbook tactics)
  (land_sea_and_air/tacticsbook tactics)
  (fantasy/tacticsbook tactics)
  (giant_monsters/tacticsbook tactics)
  (prehistory/tacticsbook tactics)
  (medieval/tacticsbook tactics)
  (age_of_sail/tacticsbook tactics)
  (age_of_steam/tacticsbook tactics)
  (pulp_fiction/tacticsbook tactics)
  (world_wars/tacticsbook tactics)
  (horror/tacticsbook tactics)
  (modern/tacticsbook tactics)
  (modern_fantasy/tacticsbook tactics)
  (superheroes/tacticsbook tactics)
  (high_technology/tacticsbook tactics)
  (science_fiction/tacticsbook tactics)
  (space_and_time/tacticsbook tactics))
 :doc "All books")

(func tactics-booklist<-tactics : base/tactics
 [tactics : base/tactics]
 (let : base/tactics
 [booklist : base/booklist := (booklist-all<-tactics tactics)]
 (base/tactics<-tactics-booklist
  tactics
  booklist))
 :doc "Returns a tactics from a tactics and booklist")

(func tactics-main : base/tactics
 (let : base/tactics
  [tacticsbasic : base/tactics := (empty base/tactics)
   tacticsabilities : base/tactics :=
    (ability/tactics-abilitymap<-tactics tacticsbasic)
   tacticsspecialties : base/tactics :=
    (specialty/tactics-specialtymap<-tactics tacticsabilities)
   tacticsskills : base/tactics :=
    (skill/tactics-skillmap<-tactics tacticsspecialties)
   tacticspowers : base/tactics :=
    (power/tactics-powermap<-tactics tacticsskills)
   tacticsitems : base/tactics :=
    (item/tactics-itemmap<-tactics tacticspowers)
   tacticsunits : base/tactics :=
    (unit/tactics-unitmap<-tactics tacticsitems)
   tacticsplaces : base/tactics :=
    (place/tactics-placemap<-tactics tacticsunits)
   tacticsscenes : base/tactics :=
    (scene/tactics-scenemap<-tactics tacticsplaces)
   tacticsall : base/tactics := 
    (tactics-booklist<-tactics tacticsscenes)]
  tacticsall)
 :doc "Returns a fully loaded tactics")
